substitutions:
  font_glyphs: '&@!"''%()<>+=,-_.:°/$€£¥?0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyzÀàÁáÂâÃãÄäĀāĂăÅåǺǻẠạĄąÆæǼǽĆćĈĉČčĊċÇçĎďĐđÐðÈèÉéÊêẼẽĚěËëĒēĔĕĖėẸẹĘęĜĝǦǧĞğĠġĢģĤĥĦħıÌìÍíÎîĨĩÏïĪīĬĭİỊịĮįȷĴĵĶķĸĹĺĽľĻļŁłĿŀŃńÑñŇňŅņƝɲŊŋŉÒòÓóÔôÕõÖöŌōŎŏŐőỌọǪǫØøǾǿŒœŔŕŘřŖŗŚśŜŝŠšŞşȘșẞßŤťŢţȚțŦŧÞþÙùÚúÛûŨũÜüŪūŬŭŮůŰűỤụŲųẀẁẂẃŴŵẄẅỲỳÝýŶŷỸỹŸÿȲȳŹźŽžŻżĲĳƏə'  
esphome:
  name: front-entrance-display
  friendly_name: Front Entrance Display
  on_boot:
    - script.execute: backlight_off  

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_SPIRAM_FETCH_INSTRUCTIONS: y
      CONFIG_SPIRAM_RODATA: y
  flash_size: 16MB
psram:
  mode: octal
  speed: 80MHz
  
api:
logger:
  hardware_uart: USB_SERIAL_JTAG
  # level: error
wifi: 
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.1.127

ota:
  platform: esphome
  
time:
  - platform: homeassistant
    id: sntp_time
    on_time_sync:
      - script.execute: time_update
    on_time:
      - minutes: '*'
        seconds: 0
        then:
          - script.execute: time_update

ch422g:
  - id: io_ex

i2c:
  sda: 8
  scl: 9
  frequency: 400kHz
  scan: true
  id: bus_a

touchscreen:
  - platform: gt911
    i2c_id: bus_a
    address: 0x5D
    id: device_touchscreen
    reset_pin:
      ch422g: io_ex
      number: 1
    interrupt_pin:
      number: 4
    on_touch:
      - script.execute: backlight_off
display:
  - platform: rpi_dpi_rgb
    id: device_display
    update_interval: never
    auto_clear_enabled: false
    color_order: RGB
    pclk_frequency: 16MHz
    dimensions:
      width: 800
      height: 480
    reset_pin:
      ch422g: io_ex
      number: 3
    de_pin:
      number: 5
    hsync_pin:
      number: 46
      ignore_strapping_warning: true
    vsync_pin:
      number: 3
      ignore_strapping_warning: true
    pclk_pin: 7
    pclk_inverted: true
    hsync_back_porch: 8
    hsync_front_porch: 8
    hsync_pulse_width: 4
    vsync_back_porch: 16
    vsync_front_porch: 16
    vsync_pulse_width: 4
    data_pins:
      red:
        - 1         #r3.
        - 2         #r4.
        - 42        #r5
        - 41        #r6
        - 40        #r7
      blue:
        - 14        #b3
        - 38        #b4
        - 18        #b5
        - 17        #b6
        - 10        #b7
      green:
        - 39        #g2
        - 0         #g3.
        - 45        #g4
        - 48        #g5
        - 47        #g6
        - 21        #g7


interval:
  - interval: 1s
    then:
      - lambda: |-
          static int countdown = 0;
          if (id(countdown_control).state) {
            if (countdown == 0) {
              countdown = 60;
            }
            if (countdown > 0) {
              id(countdown_timer).publish_state((std::to_string(countdown) + "seconds").c_str());
              countdown--;
            } else {
              id(countdown_timer).publish_state("Time's up!");
              id(countdown_control).turn_off();  // Auto turn off switch when countdown finishes
            }
          }
globals:
  - id: current_pin
    type: std::string
    initial_value: "" 

button:
  - platform: restart
    id: reboot
    name: reboot

switch:
  - platform: template
    id: ceiling_light_switch
    optimistic: true
    on_turn_off: 
      - homeassistant.action:
          action: light.turn_off
          data:
            entity_id: light.entrance_ceiling
    on_turn_on: 
      - homeassistant.action:
          action: light.turn_on
          brightness: 100%
          data:
            entity_id: light.entrance_ceiling

  - platform: template
    id: home_page_flag
    optimistic: true

  - platform: gpio
    id: back_light
    name: Backlight
    pin:
      ch422g: io_ex
      number: 2
      mode:
        output: true
      inverted: false 
  - platform: template
    id: countdown_control
    # name: count
    optimistic: true
    on_turn_off: 
      - lvgl.page.show: clock_page
      - script.execute: backlight_off        
    # on_turn_on:
      # - lvgl.page.show: disarming_page
text_sensor:
  - platform: wifi_info
    ip_address:
      name: IP Address
      id: ip_addr
      entity_category: "diagnostic"
    ssid:
      id: connected_ssid
      name: SSID
      entity_category: "diagnostic"
    bssid:
      id: connected_bssid
      name: BSSID
      entity_category: "diagnostic"
    mac_address:
      id: device_mac
   
  - platform: homeassistant
    id: met_weather
    entity_id: weather.home
    on_value:
      then:
        - script.execute: weather_update
        - lvgl.label.update:
            id:
              - display_weather_text
            text: !lambda return x;
         

  - platform: template
    id: pin_test

  - platform: homeassistant
    name: "Alarm Status"
    entity_id: alarm_control_panel.alarmo
    id: alarm_status    
    on_value:
      if:
        condition:
          - lambda: return id(alarm_status).state == "arming";
        then:
          - lvgl.label.update: 
              id: alarm_status_lvgl
              text_color: amber
          - lvgl.label.update: 
              id: disarm_lvgl
              text_color: amber
        else:
          - if:
              condition:
                - lambda: return id(alarm_status).state == "armed_home";
              then:
                - lvgl.label.update: 
                    id: alarm_status_lvgl
                    text_color: red
                    text: "\U000F068A"
                - lvgl.label.update: 
                    id: disarm_lvgl
                    text_color: red
                    text: "\U000F068A"
                - lvgl.label.update:
                    id: alarm_arm_home_lvgl
                    bg_color: red
                    text: "Armed Home"
              else:
                - if:
                    condition:
                      - lambda: return id(alarm_status).state == "armed_away";
                    then:
                      - lvgl.label.update: 
                          id: alarm_status_lvgl
                          text_color: red
                          text: "\U000F099D"
                      - lvgl.label.update: 
                          id: disarm_lvgl
                          text_color: red
                          text: "\U000F099D"
                      - lvgl.label.update:
                          id: alarm_arm_away_lvgl
                          bg_color: red
                          text: "Armed Away"
                    else:
                      - if:
                          condition:
                            - lambda: return id(alarm_status).state == "armed_night";
                          then:
                            - lvgl.label.update: 
                                id: alarm_status_lvgl
                                text_color: red
                                text: "\U000F1828"
                            - lvgl.label.update: 
                                id: disarm_lvgl
                                text_color: red
                                text: "\U000F1828"
                            - lvgl.label.update:
                                id: alarm_arm_night_lvgl
                                bg_color: red
                                text: "Armed Night"
                          else:
                            - if:
                                condition:
                                  - lambda: return id(alarm_status).state == "disarmed";
                                then:
                                  - lvgl.label.update: 
                                      id: alarm_status_lvgl
                                      text_color: green
                                      text: "\U000F099E"
                                  - lvgl.label.update: 
                                      id: disarm_lvgl
                                      text_color: green
                                      text: "\U000F099E"
                                  - lvgl.label.update: 
                                      id: alarm_arm_away_lvgl
                                      bg_color: green
                                      text: "Arm Away"
                                  - lvgl.label.update: 
                                      id: alarm_arm_night_lvgl
                                      bg_color: green
                                      text: "Arm Night"
                                  - lvgl.label.update: 
                                      id: alarm_arm_home_lvgl
                                      bg_color: green
                                      text: "Arm Home"
                                  - switch.turn_off: countdown_control
                                else:
                                  if: 
                                    condition:
                                      - lambda: return id(alarm_status).state == "triggered";
                                    then:
                                      lvgl.page.show: triggered_page
                                    else:
                                      if:
                                        condition:
                                          - lambda: return id(alarm_status).state == "pending";
                                        then: 
                                          - lvgl.page.show: disarming_page
                                          - switch.turn_on: countdown_control
  - platform: template
    id: countdown_timer
    # name: countdown  
    on_value:
      - lvgl.label.update: 
          id: entrance_delay_lvgl
          text: !lambda return x;

script:

  - id: time_update
    then:
      - lvgl.label.update:
          id: display_time_blank
          text: !lambda |-
            auto now = id(sntp_time).now();
            int hour = now.hour % 12;
            if (hour == 0) hour = 12;
            return str_sprintf("%d:%02d%s", hour, now.minute, now.hour < 12 ? "am" : "pm");

      - lvgl.label.update:
          id: display_date
          text: !lambda |-
            static const char * const days_en[] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
            static const char * const months[] = {"Jan", "Feb", "Mar", "Apr", "May", "Jun", 
                                                  "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};
            
            auto now = id(sntp_time).now();
            
            const char * const * day_names = days_en;
            const char * day_name = day_names[now.day_of_week - 1];
            
            int day = now.day_of_month;
            const char *suffix;
            if (day >= 11 && day <= 13) {
                suffix = "th";
            } else {
                switch (day % 10) {
                    case 1: suffix = "st"; break;
                    case 2: suffix = "nd"; break;
                    case 3: suffix = "rd"; break;
                    default: suffix = "th"; break;
                }
            }
            
            static char date_buf[64];
            snprintf(date_buf, sizeof(date_buf), "%s, %s %d%s %04d",
            day_name, months[now.month - 1], day, suffix, now.year);  // Removed % 100
            return date_buf;

          # text: !lambda |-
            # static const char * const days_en[] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
            # static char date_buf[32];
            # auto now = id(sntp_time).now();
            # const char * const * day_names;
            # day_names = days_en;
            # snprintf(date_buf, sizeof(date_buf), "%s", day_names[now.day_of_week - 1]);
            # return date_buf;

  - id: backlight_off      
    then:
      - switch.turn_on: back_light
      - delay: 60s
      - if:
          condition:
            not:
              - lambda: return id(alarm_status).state == "triggered";
          then:
            - lvgl.page.show: clock_page
            - delay: 180s
            - switch.turn_off: back_light
    mode: restart

  - id: weather_update
    then:
      - if:
          condition:
            - lambda: return id(met_weather).state == "rainy";
          then:
            - lvgl.label.update:
                id: 
                  - display_weather
                  
                text_font: icon_font_80
                text: "\U000F0597"
          else:
            - if:
                condition:
                  - lambda: return id(met_weather).state == "clear-night";
                then:
                  - lvgl.label.update:
                      id: 
                        - display_weather
                        
                      text_font: icon_font_80
                      text: "\U000F0594"               
                else:
                  - if:
                      condition:
                        - lambda: return id(met_weather).state == "exceptional";
                      then:
                        - lvgl.label.update:
                            id: 
                              - display_weather
                              
                            text_font: icon_font_80
                            text: "\U000F0590"
                      else:
                        - if:
                            condition:
                              - lambda: return id(met_weather).state == "hail";
                            then:
                              - lvgl.label.update:
                                  id: 
                                    - display_weather
                                    
                                  text_font: icon_font_80
                                  text: "\U000F0592"
                            else:
                              - if:
                                  condition:
                                    - lambda: return id(met_weather).state == "lightning";
                                  then:
                                    - lvgl.label.update:
                                        id: 
                                          - display_weather
                                          
                                        text_font: icon_font_80
                                        text: "\U000F0593"
                                  else:
                                    - if:
                                        condition:
                                          - lambda: return id(met_weather).state == "lightning-rainy";
                                        then:
                                          - lvgl.label.update:
                                              id: 
                                                - display_weather
                                                
                                              text_font: icon_font_80
                                              text: "\U000F067E"
                                        else:
                                          - if:
                                              condition:
                                                - lambda: return id(met_weather).state == "partlycloudy";
                                              then:
                                                - lvgl.label.update:
                                                    id: 
                                                      - display_weather
                                                      
                                                    text_font: icon_font_80
                                                    text: "\U000F0595"
                                              else:
                                                - if:
                                                    condition:
                                                      - lambda: return id(met_weather).state == "pouring";
                                                    then:
                                                      - lvgl.label.update:
                                                          id: 
                                                            - display_weather
                                                            
                                                          text_font: icon_font_80
                                                          text: "\U000F0596"           
                                                    else:
                                                      - if:
                                                          condition:
                                                            - lambda: return id(met_weather).state == "snowy";
                                                          then:
                                                            - lvgl.label.update:
                                                                id: 
                                                                  - display_weather
                                                                  
                                                                text_font: icon_font_80
                                                                text: "\U000F0598"  
                                                          else:
                                                            - if:
                                                                condition:
                                                                  - lambda: return id(met_weather).state == "snowy-rainy";
                                                                then:
                                                                  - lvgl.label.update:
                                                                      id: 
                                                                        - display_weather
                                                                        
                                                                      text_font: icon_font_80
                                                                      text: "\U000F067F"  
                                                                else:
                                                                  - if:
                                                                      condition:
                                                                        - lambda: return id(met_weather).state == "sunny";
                                                                      then:
                                                                        - lvgl.label.update:
                                                                            id: 
                                                                              - display_weather
                                                                              
                                                                            text_font: icon_font_80
                                                                            text: "\U000F0599"    
                                                                      else:
                                                                        - if:
                                                                            condition:
                                                                              - lambda: return id(met_weather).state == "sunny-rainy";
                                                                            then:
                                                                              - lvgl.label.update:
                                                                                  id: 
                                                                                    - display_weather
                                                                                    
                                                                                  text_font: icon_font_80
                                                                                  text: "\U000F0596"  
                                                                            else:
                                                                              - if:
                                                                                  condition:
                                                                                    - lambda: return id(met_weather).state == "windy";
                                                                                  then:
                                                                                    - lvgl.label.update:
                                                                                        id: 
                                                                                          - display_weather
                                                                                          
                                                                                        text_font: icon_font_80
                                                                                        text: "\U000F059D"  
                                                                                  else:
                                                                                    - if:
                                                                                        condition:
                                                                                          - lambda: return id(met_weather).state == "windy-variant";
                                                                                        then:
                                                                                          - lvgl.label.update:
                                                                                              id: 
                                                                                                - display_weather
                                                                                                
                                                                                              text_font: icon_font_80
                                                                                              text: "\U000F059E" 
                                                                                        else:
                                                                                          - if:
                                                                                              condition:
                                                                                                - lambda: return id(met_weather).state == "sunny-off";
                                                                                              then:
                                                                                                - lvgl.label.update:
                                                                                                    id: 
                                                                                                      - display_weather
                                                                                                      
                                                                                                    text_font: icon_font_80
                                                                                                    text: "\U000F14E4"  
                                                                                              else:
                                                                                                - if:
                                                                                                    condition:
                                                                                                      - lambda: return id(met_weather).state == "cloudy";
                                                                                                    then:
                                                                                                      - lvgl.label.update:
                                                                                                          id: 
                                                                                                            - display_weather
                                                                                                            
                                                                                                          text_font: icon_font_80
                                                                                                          text: "\U000F0590"


sensor:  

  - platform: wifi_signal
    name: "WiFi db"
    id: wifi_signal_db
    update_interval: 30s
    
  - platform: copy 
    source_id: wifi_signal_db
    name: "WiFi Signal"
    id: wifi_percent
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""   
    
                   
  - platform: homeassistant
    id: out_temp
    entity_id: sensor.outside_temperature
    internal: true 
    on_value:
      - lvgl.label.update:
          id: 
            - out_temp_lvgl
          text:
            format: "%.0f°C"
            args: [ 'x' ]                        
binary_sensor:
  - platform: homeassistant
    id: outside_light_state
    entity_id: light.front_outside_light
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: button_1
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: outside_light_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: outside_light_lvgl
                  text_color: white

  - platform: homeassistant
    id: ceiling_light_state
    entity_id: light.entrance_ceiling
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: button_2
            state:
              checked: !lambda return x;  
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: ceiling_light_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: ceiling_light_lvgl
                  text_color: white

  - platform: homeassistant
    id: stairs_light_state
    entity_id: light.stairs_led
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: button_3
            state:
              checked: !lambda return x;  
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: stairs_light_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: stairs_light_lvgl
                  text_color: white


  - platform: homeassistant
    id: hallway_state
    entity_id: light.hallway_ceiling
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: button_4
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: hallway_room_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: hallway_room_lvgl
                  text_color: white  
               
  - platform: homeassistant
    id: hall_motion
    entity_id: binary_sensor.hallway_motion
    internal: true
    publish_initial_state: true
    on_state:
      then:
        script.execute: backlight_off

  - platform: homeassistant
    id: stairs_motion
    entity_id: binary_sensor.top_stairs_motion
    internal: true
    publish_initial_state: true
    on_state:
      then:
        script.execute: backlight_off

  - platform: homeassistant
    id: front_door
    entity_id: binary_sensor.frontdoor_door
    internal: true
    publish_initial_state: true
    on_state:
      then:
        script.execute: backlight_off

  - platform: homeassistant
    id: living_ceiling_state
    entity_id: light.livingroom_ceiling_led_colorflux_ls3
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: livingroom_ceiling_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: livingroom_ceiling_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: livingroom_ceiling_lvgl
                  text_color: white

  - platform: homeassistant
    id: stove_state
    entity_id: light.stove
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: kitchen_stove_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: kitchen_stove_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: kitchen_stove_lvgl
                  text_color: white

  - platform: homeassistant
    id: dining_light_state
    entity_id: light.dining_room_lights
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: dining_room_lights_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: dining_room_lights_lvgl
                  text_color: yellow
            else:
              - lvgl.label.update:
                  id: dining_room_lights_lvgl
                  text_color: white
  - platform: homeassistant
    id: all_lights_state
    entity_id: light.all_lights
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: lights_status_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: lights_status_lvgl
                  text_color: red
            else:
              - lvgl.label.update:
                  id: lights_status_lvgl
                  text_color: green    

  - platform: homeassistant
    id: all_windows_state
    entity_id: binary_sensor.windows
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: window_status_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: window_status_lvgl
                  text_color: red
                  text:  "\U000F05B1"
            else:
              - lvgl.label.update:
                  id: window_status_lvgl
                  text_color: green
                  text: "\U000F05AE"
                  
  - platform: homeassistant
    id: all_doors_state
    entity_id: binary_sensor.outside_doors
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: door_status_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;  
            then:
              - lvgl.label.update:
                  id: door_status_lvgl
                  text_color: red
                  text:  "\U000F081C"
            else:
              - lvgl.label.update:
                  id: door_status_lvgl
                  text_color: green 
                  text: "\U000F081B"
                  
font:

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/consola.ttf"
    id: my_font80
    size: 80

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/consola.ttf"
    id: my_font40
    size: 40
    # bpp: 4     
    glyphs:
      '${font_glyphs}'
   
  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/consola.ttf"
    id: my_font160
    size: 160
    glyphs:
      '${font_glyphs}'

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_80
    size: 80
    bpp: 4
    glyphs: &icon_glyphs 
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0594" # mdi-weather-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant   F072A
      - "\U000F0450" # mdi-refresh
      - "\U000F0A19" # mdi-toggle off
      - "\U000F0521" # mdi-toggle on
      - "\U000F024A" # mdi-garden
      - "\U000F04C8" # mdi-spots
      - "\U000F1722" # mdi-fire off
      - "\U000F02DC" # mdi-home button
      - "\U000F0B2A" # mdi-right
      - "\U000F04B9" # mdi-living room
      - "\U000F1061" # mdi-dining
      - "\U000F04DE" # mdi-kitchen stove
      - "\U000F1051" # mdi-led strip variant
      - "\U000F06E8" # mdi-light bulb illuminated
      - "\U000F0335" # mdi-light bulb off
      - "\U000F0210" # mdi-fan
      - "\U000F050F" # mdi-temp
      - "\U000F0769" # mdi-ceiling
      - "\U000F18DD" # mdi-ceiling multiple
      - "\U000F1798" # mdi-ceiling fan light
      - "\U000F091C" # mdi-wall light
      - "\U000F1B94" # mdi-sleep
      - "\U000F04CD" # mdi-stairs
      - "\U000F07D0" # mdi-api connected
      - "\U000F1828" # mdi-armed night
      - "\U000F068A" # mdi-alarm home
      - "\U000F099D" # mdi-alarm away
      - "\U000F099E" # mdi-disarmed
      - "\U000F0483" # mdi-security
      - "\U000F081B" # mdi-door closed
      - "\U000F081C" # mdi-door open
      - "\U000F1254" # mdi-lights group
      - "\U000F05B1" # mdi-windows open
      - "\U000F05AE" # mdi-windows closed 


  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_120
    size: 120
    glyphs: *icon_glyphs

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_60
    size: 60
    bpp: 4
    glyphs: *icon_glyphs
          
  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_180
    size: 180
    glyphs: *icon_glyphs

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_40
    size: 40
    bpp: 4
    glyphs: *icon_glyphs 
     
color:
  - id: green
    hex: '75D15F'
  - id: leaf_green
    hex: '60A86A'
  - id: red
    hex: 'FF3131'
  - id: blue
    hex: '47B7E9'
  - id: blue_drk
    hex: '085296'
  - id: amber
    hex: 'FBAB35'
  - id: lime
    hex: '20FC30'
  - id: pink
    hex: 'D92BBC'
  - id: yellow
    hex: 'FFC000'
  - id: black
    hex: '000000'
  - id: white
    hex: 'ffffff'
  - id: purple
    hex: '73264D'
  - id: light_blue
    hex: '2E98DA'
  - id: lilac
    hex: 'D6BED0'
  - id: bg_blue
    hex: '032341'
  - id: bg_purple
    hex: 'A16793'
  - id: bg_green
    hex: '05350B'
  - id: bg_red
    hex: '3C0000'
  - id: bg_pink
    hex: '61034D'
  - id: bg_charcoal
    hex: '141414'
  - id: bg_brown
    hex: '41220D'
  - id: bg_grey
    hex: '4F4F4F'
  - id: dk_blue
    hex: '0033cc'

key_collector:
  - source_id: lvgl_keypad
    min_length: 4
    max_length: 4
    end_keys: "#"
    end_key_required: true
    back_keys: "*"
    allowed_keys: "0123456789*#"
    timeout: 5s
    on_progress:
      - if:
          condition:
            lambda: return (0 != x.compare(std::string{""}));
          then:
            - lvgl.label.update:
                id: lvgl_label
                text: !lambda 'return x.c_str();'
                text_color: white
          else:
            - lvgl.label.update:
                id: lvgl_label
                text: "Enter Code"
                text_color: grey
    on_result:
      - lambda: |-
          id(current_pin) = x.c_str();
      - homeassistant.service:
          service: alarm_control_panel.alarm_disarm
          data:
            entity_id: alarm_control_panel.alarmo
            code: !lambda return id(current_pin).c_str();

lvgl:
  displays:
    - device_display
  touchscreens:
    - device_touchscreen
  theme:
    button:
      bg_color: dk_blue
      bg_opa: COVER
      border_color: 0x53334B
      border_width: 4
      text_color: white
      radius: 20
      shadow_color: bg_grey
      shadow_ofs_x: 0
      shadow_ofs_y: 0
      shadow_spread: 3
      shadow_width: 5
      shadow_opa: 70%
      checked: 
        bg_color: blue_drk
        bg_opa: COVER
        border_color: black
        border_width: 2
        text_color: yellow
        radius: 20
        shadow_color: yellow
        shadow_ofs_x: 0
        shadow_ofs_y: 0
        shadow_spread: 5
        shadow_width: 5
        shadow_opa: 70%

    switch:
      bg_color: 0xC0C0C0
      bg_grad_color: 0xb0b0b0
      bg_grad_dir: VER
      bg_opa: COVER
      checked:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0xFFFFFF
        bg_grad_color: 0xC0C0C0
        bg_grad_dir: VER
        bg_opa: COVER
    slider:
      border_width: 1
      border_opa: 15%
      bg_color: 0xcccaca
      bg_opa: 15%
      indicator:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0x2F8CD8
        bg_grad_color: 0x005782
        bg_grad_dir: VER
        bg_opa: COVER
        border_color: 0x0077b3
        border_width: 1
        text_color: 0xFFFFFF
    image: 
      border_width: 0
        
  style_definitions:
    - id: main_content
      bg_color: black
      text_color: amber
      text_align: CENTER
      width: 100%
      height: 80%    
      align: TOP_MID
      border_width: 0
      radius: 0     
     
    - id: bottom_content_bar
      bg_color: bg_charcoal
      text_color: amber
      text_align: left
      text_font: my_font40
      align: BOTTOM_LEFT
      width: 100%
      height: 20%    
      border_width: 0
      radius: 0

    - id: triggered_content
      bg_color: red
      text_color: amber
      text_align: CENTER
      width: 100%
      height: 100%    
      align: TOP_MID
      border_width: 0
      radius: 0     
 
                             
########## bottom bar ##########
  top_layer:
      widgets:
        - obj:
            id: bottom_bar
            styles: bottom_content_bar
            text_color: grey
            scrollbar_mode: "OFF"
            widgets:            
              - label:
                  id: out_temp_lvgl_icon
                  align: LEFT_MID
                  text_font: icon_font_40
                  text_color: grey
                  text: "\U000F050F"
              - label:
                  id: out_temp_lvgl
                  align: LEFT_MID
                  translate_x: 40
                  translate_y: 5
                  text_color: grey
                  text: " "

              - label:
                  id: display_weather
                  align: CENTER
                  translate_x: -100
                  text_font: icon_font_80
                  text: " " 

              - label:
                  id: display_weather_text
                  align: CENTER
                  translate_x: 60
                  text_font: montserrat_40
                  text: " " 

              - label:
                  id: home_lvgl
                  align: BOTTOM_RIGHT
                  text_color: grey
                  text_font: icon_font_60
                  text: "\U000F02DC"
                  on_click:
                    - if:
                        condition:
                          switch.is_on: home_page_flag
                        then: 
                          lvgl.page.show: clock_page
                        else:
                          lvgl.page.show: button_page
              - label:
                  id: alarm_status_lvgl
                  align: BOTTOM_RIGHT
                  translate_x: -75
                  text_font: icon_font_60
                  text_color: red
                  text: "\U000F099E"
                  on_click:
                    if:
                      condition:
                        - lambda: return (id(alarm_status).state == "arming" || id(alarm_status).state == "armed_away" || id(alarm_status).state == "armed_home" || id(alarm_status).state == "armed_night");
                      then:
                        lvgl.page.show: disarm_page
                      else:
                        lvgl.page.show: alarm_page
######### buttons page ################
  pages:
    - id: button_page
      widgets:
        - obj: 
            styles: main_content
            text_font: montserrat_30
            layout: 
              pad_column: 10
              pad_row: 2
              type: GRID 
              grid_columns: [FR(1), FR(1), FR(1), FR(1)] 
              grid_rows: [FR(70), FR(20), FR(70), FR(20)]

            widgets:
              - button:
                  checkable: true
                  id: button_1
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: outside_light_lvgl
                        text_font: icon_font_120
                        text: "\U000F024A"
                        align: CENTER  
                  on_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: light.front_outside_light
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "Outside"
                  text_align: CENTER                  

              - button:
                  checkable: true
                  id: button_2
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: ceiling_light_lvgl
                        text_font: icon_font_120
                        text: "\U000F0769"
                        align: CENTER
                  on_click:
                    on_click:
                       switch.toggle: ceiling_light_switch
   
              - label:
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "Ceiling"
                  text_align: CENTER                  

              - button:
                  checkable: true
                  id: button_3
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: stairs_light_lvgl
                        text_font: icon_font_120
                        text: "\U000F04CD" 
                        align: CENTER
                  on_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: light.stairs_led                                  
              - label:
                  grid_cell_column_pos: 2 # place the widget in
                  grid_cell_row_pos: 1 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "Stairs"
                  text_align: CENTER                  

              - button:
                  checkable: true
                  id: button_4
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: hallway_room_lvgl
                        text_font: icon_font_120
                        text: "\U000F0769"
                        align: CENTER
                  on_click:
                    - homeassistant.action:
                        action: light.toggle
                        data:
                          entity_id: light.hallway_ceiling

              - label:                        
                  grid_cell_column_pos: 3 
                  grid_cell_row_pos: 1 
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "Hallway"
                  text_align: CENTER                                   
                 
## second row ##
              - button:
                  checkable: true
                  id: button_5
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: livingroom_ceiling_lvgl
                        text_font: icon_font_120
                        text: "\U000F04B9"  
                        align: CENTER
                  on_press:
                    then: 
                      - homeassistant.service:
                          service: light.toggle
                          data:
                            entity_id: light.livingroom_ceiling_led_colorflux_ls3
                  
              - label:
                  grid_cell_column_pos: 0 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "Livingroom"
                  text_align: CENTER                  

              - button:
                  checkable: true
                  id: button_6
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: kitchen_stove_lvgl
                        text_font: icon_font_120
                        text: "\U000F04DE"
                        align: CENTER
                  on_press:
                    then: 
                      - homeassistant.service:
                          service: light.toggle
                          data:
                            entity_id: light.stove
                   
              - label:
                  grid_cell_column_pos: 1 # place the widget in
                  grid_cell_row_pos: 3 # the corresponding cell
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "Kitchen"
                  text_align: CENTER                  

              - button:
                  checkable: true
                  id: button_7
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: dining_room_lights_lvgl
                        text_font: icon_font_120
                        text: "\U000F1798"  
                        align: CENTER
                  on_press:
                    then: 
                      - homeassistant.service:
                          service: light.toggle
                          data:
                            entity_id: light.dining_room_lights
                         
              - label:
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 3 
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: "DiningRM"
                  text_align: CENTER                  

              - button:
                  checkable: false
                  id: button_8
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 2
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        id: heat_boost_lvgl
                        text_font: icon_font_120
                        text: "\U000F07D0"
                        align: CENTER
              - label:
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 3 
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  text: " "
                  text_align: CENTER             

      on_load:   
        - switch.turn_on: home_page_flag       
      on_unload:
        - switch.turn_off: home_page_flag

############ clock page ##############
    - id: clock_page
      widgets:
        - obj: 
            styles: main_content
            border_width: 0
            text_color: red
            widgets:    
              - label:
                  id: display_time_blank
                  align: CENTER
                  width: 100%
                  text_align: CENTER
                  text_color: red
                  text_font: my_font160
                  text: " " 
                  
              - label:
                  id: display_date
                  align: CENTER
                  text: " "
                  translate_y: 120
                  # translate_x: 100
                  text_font: montserrat_48

              - label:
                  id: door_status_lvgl
                  align: TOP_RIGHT
                  translate_x: -160
                  text_font: icon_font_60
                  text_color: green
                  text: "\U000F081B"

              - label:
                  id: window_status_lvgl
                  align: TOP_RIGHT
                  translate_x: -80
                  text_font: icon_font_60
                  text_color: green
                  text: "\U000F05AE"

              - label:
                  id: lights_status_lvgl
                  align: TOP_RIGHT
                  text_font: icon_font_60
                  text_color: green
                  text: "\U000F1254"

              - label:
                  id: settings_page_lvgl
                  align: TOP_LEFT
                  # translate_x: 160
                  border_width: 5
                  text_font: icon_font_60
                  text_color: black
                  text: " "
                  on_click:
                    lvgl.page.show: settings_page


      
########## alarm page #################
    - id: alarm_page
      styles: main_content
      widgets:    
        - obj:
            width: 500
            height: 85
            align: TOP_MID
            scrollbar_mode: "OFF"         
            bg_opa: TRANSP   
            pad_all: 0
            widgets:
              - label:
                  id: alarm_arm_home_lvgl
                  align: CENTER
                  text_align: CENTER
                  text_font: montserrat_40
                  text: "Arm Home"
                  text_color: white
                  width: 100%
                  height: 100%
                  bg_opa: COVER
                  bg_color: green
                  pad_top: 20

            on_press:
              - homeassistant.service:
                  service: alarm_control_panel.alarm_arm_home
                  data:
                    entity_id: alarm_control_panel.alarmo
                    code: !lambda return id(current_pin).c_str();
              - lambda: |-
                  id(current_pin) = ""; 
        - obj:
            width: 500
            height: 85
            align: CENTER
            translate_y: -65
            scrollbar_mode: "OFF"            
            bg_opa: TRANSP   
            pad_all: 0
            widgets:
              - label:
                  id: alarm_arm_night_lvgl
                  align: CENTER
                  text_font: montserrat_40
                  text_align: CENTER
                  text: "Arm Night"
                  text_color: white
                  width: 100%
                  height: 100%
                  bg_opa: COVER
                  bg_color: green
                  pad_top: 20
            on_press:
              - homeassistant.service:
                  service: alarm_control_panel.alarm_arm_night
                  data:
                    entity_id: alarm_control_panel.alarmo
                    code: !lambda return id(current_pin).c_str();
              - lambda: |-
                  id(current_pin) = ""; 
        - obj:
            width: 500
            height: 85
            align: BOTTOM_MID
            translate_y: -130
            scrollbar_mode: "OFF"            
            bg_opa: TRANSP   
            pad_all: 0
            widgets:
              - label:
                  id: alarm_arm_away_lvgl
                  align: CENTER
                  text_font: montserrat_40
                  text_align: CENTER
                  text: "Arm Away"
                  text_color: white
                  width: 100%
                  height: 100%
                  bg_opa: COVER
                  bg_color: green
                  pad_top: 20
            on_press:
              - homeassistant.service:
                  service: alarm_control_panel.alarm_arm_away
                  data:
                    entity_id: alarm_control_panel.alarmo
                    code: !lambda return id(current_pin).c_str();
              - lambda: |-
                  id(current_pin) = ""; 
 

    - id: disarm_page
      styles: main_content
      widgets:
        - obj: 
            styles: main_content
            border_width: 0
            widgets:
              - label:
                  id: lvgl_label
                  align: TOP_RIGHT
                  text_font: montserrat_40
                  text: "Enter Code"
                  text_align: CENTER
                  text_color: grey
                  translate_x: -145
                  translate_y: 15
        - obj:
            width: 315
            height: 200
            align: TOP_RIGHT
            translate_x: -60
            translate_y: 110
            border_width: 0
            bg_color: black
            scrollbar_mode: "OFF"            
            widgets:
              - label:
                  bg_color: black
                  id: disarm_lvgl
                  align: CENTER
                  text_font: icon_font_180
                  text: " "
      
        - buttonmatrix:
            id: lvgl_keypad
            x: 10
            y: 10
            width: 400
            height: 360
            text_font: montserrat_40
            bg_color: bg_charcoal
            border_width: 0
            items:
              pressed:
                bg_color: grey
            rows:
              - buttons:
                  - text: 1
                    control:
                      no_repeat: true
                  - text: 2
                    control:
                      no_repeat: true
                  - text: 3
                    control:
                      no_repeat: true
              - buttons:
                  - text: 4
                    control:
                      no_repeat: true
                  - text: 5
                    control:
                      no_repeat: true
                  - text: 6
                    control:
                      no_repeat: true
              - buttons:
                  - text: 7
                    control:
                      no_repeat: true
                  - text: 8
                    control:
                      no_repeat: true
                  - text: 9
                    control:
                      no_repeat: true
              - buttons:
                    
                  - text: "\uF55A"
                    key_code: "*"
                    control:
                      no_repeat: true
                  - text: 0
                    control:
                      no_repeat: true
                  - text: "#75D15F \uF00C#"
                    key_code: "#"
                    control:
                      no_repeat: true
                      recolor: true

    - id: triggered_page
      widgets:
        - obj: 
            styles: triggered_content
            border_width: 0
            text_color: white
            bg_color: red
            widgets: 
              - label:
                  align: TOP_MID
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 50
                  text_font: my_font80
                  text: "ALARM" 
              - label:
                  align: CENTER
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 150
                  text_font: my_font80
                  text: "TRIGGERED" 
              - label:
                  width: 80
                  height: 80
                  translate_x: 20
                  translate_y: 20
                  align: BOTTOM_RIGHT
                  text_color: white
                  text_font: icon_font_60
                  text: "\U000F02DC"
                  on_click:
                    if:
                      condition:
                        not:
                          - lambda: return id(alarm_status).state == "triggered"; 
                      then:
                        - lvgl.page.show: clock_page
              - button:
                  checkable: true
                  id: disarm_button
                  align: BOTTOM_MID
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        text_font: my_font40
                        text: "Disarm"
                        align: CENTER  
                  on_press:
                    lvgl.page.show: disarm_page
    - id: disarming_page
      widgets:
        - obj: 
            styles: triggered_content
            border_width: 0
            text_color: black
            bg_color: amber
            scrollbar_mode: "off"
            widgets: 
              - label:
                  align: TOP_MID
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 50
                  text_font: my_font80
                  text: "ALARM" 

              - label:
                  align: CENTER
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 150
                  text_font: my_font80
                  text: "Entrance Delay" 

              - label:
                  id: entrance_delay_lvgl
                  align: CENTER
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 260
                  text_font: my_font80
                  text: " " 

              - label:
                  width: 80
                  height: 80
                  translate_x: 20
                  translate_y: 20
                  align: BOTTOM_RIGHT
                  text_color: white
                  text_font: icon_font_60
                  text: "\U000F02DC"
                  on_click:
                    if:
                      condition:
                        not:
                          - lambda: return id(alarm_status).state == "pending"; 
                      then:
                        - lvgl.page.show: clock_page
              - button:
                  checkable: true
                  id: disarm_button_2
                  align: BOTTOM_MID
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        text_font: my_font40
                        text: "Disarm"
                        align: CENTER  
                  on_press:
                    lvgl.page.show: disarm_page
      on_load:
        - lvgl.widget.hide: bottom_bar  
        - script.stop: backlight_off
        - switch.turn_on: back_light
      on_unload:
        - lvgl.widget.show: bottom_bar
        - script.execute: backlight_off


    - id: settings_page
      styles: main_content
      widgets:    
        - obj:
            width: 300
            height: 60
            align: TOP_MID
            scrollbar_mode: "OFF"         
            bg_opa: TRANSP   
            pad_all: 0
            widgets:
              - label:
                  align: CENTER
                  text_align: left
                  text_font: montserrat_40
                  text: "Settings"
                  text_color: white
                  width: 80%
                  height: 100%
                  bg_opa: COVER
                  bg_color: bg_charcoal
                  pad_top: 5
              - label:
                  id: wifi_set_lvgl
                  align: CENTER
                  text_align: right
                  text_font: icon_font_40
                  text: "\U000F08D6"
                  text_color: white
                  width: 20%
                  height: 100%
                  translate_x: 90
                  bg_opa: COVER
                  bg_color: bg_charcoal
                  pad_top: 5

        - obj:
            width: 350
            height: 310
            align: TOP_LEFT
            translate_x: 40
            translate_y: 70
            scrollbar_mode: "OFF"         
            bg_opa: TRANSP   
            pad_all: 0
            border_width: 5
        - obj:
            width: 350
            height: 310
            align: TOP_RIGHT
            translate_x: -40
            translate_y: 70
            scrollbar_mode: "OFF"         
            bg_opa: TRANSP   
            pad_all: 0
            border_width: 5
