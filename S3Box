substitutions:
  font_glyphs: '&@!"''%()<>+=,-_.:°/$€£¥?0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyzÀàÁáÂâÃãÄäĀāĂăÅåǺǻẠạĄąÆæǼǽĆćĈĉČčĊċÇçĎďĐđÐðÈèÉéÊêẼẽĚěËëĒēĔĕĖėẸẹĘęĜĝǦǧĞğĠġĢģĤĥĦħıÌìÍíÎîĨĩÏïĪīĬĭİỊịĮįȷĴĵĶķĸĹĺĽľĻļŁłĿŀŃńÑñŇňŅņƝɲŊŋŉÒòÓóÔôÕõÖöŌōŎŏŐőỌọǪǫØøǾǿŒœŔŕŘřŖŗŚśŜŝŠšŞşȘșẞßŤťŢţȚțŦŧÞþÙùÚúÛûŨũÜüŪūŬŭŮůŰűỤụŲųẀẁẂẃŴŵẄẅỲỳÝýŶŷỸỹŸÿȲȳŹźŽžŻżĲĳƏə'  
esphome:
  name: bedroom-display
  friendly_name: Bedroom Display
  on_boot:
    - lambda: id(back_light).turn_on().set_brightness(1.0).set_transition_length(1).perform();
    - delay: 15s
    - lvgl.widget.hide: boot_screen
    - lvgl.page.show: clock_page

esp32:
  board: esp32s3box
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_ADC_DISABLE_DAC: "y"
      CONFIG_ADC_ONESHOT_CTRL_FUNC_IN_IRAM: "y"
      CONFIG_ADC_CONTINUOUS_WIFI_WORKAROUND: "y"
      CONFIG_ADC_SUPPRESS_DEPRECATE_WARN: "y"
  flash_size: 16MB

psram:
  mode: octal
  speed: 80MHz
  
api:
  on_client_connected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.show: 
              id: lbl_hastatus
  on_client_disconnected:
    - if:
        condition:
          lambda: 'return (0 == client_info.find("Home Assistant "));'
        then:
          - lvgl.widget.hide: 
              id: lbl_hastatus

logger:
  hardware_uart: USB_SERIAL_JTAG
  level: DEBUG
  baud_rate: 0
  tx_buffer_size: 2048

wifi: 
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.1.142

ota:
  platform: esphome
  
time:
  - platform: homeassistant
    id: sntp_time
    on_time_sync:
      - script.execute: time_update
    on_time:
      - minutes: '*'
        seconds: 0
        then:
          - script.execute: time_update
      - hours: 2
        minutes: 0
        seconds: 0
        then:
          - switch.turn_on: switch_antiburn
      - hours: 2
        minutes: 15
        seconds: 0
        then:
          - switch.turn_off: switch_antiburn

i2c:
  - id: bus_a
    sda: GPIO08
    scl: GPIO18
    scan: true
    frequency: 100kHz

  - sda: GPIO41
    scl: GPIO40
    scan: false
    sda_pullup_enabled: true
    scl_pullup_enabled: true
    frequency: 50kHz
    id: bus_b
    

spi:
  clk_pin: 7
  mosi_pin: 6

display:
  - platform: ili9xxx
    id: device_display
    model: S3BOX
    data_rate: 40MHz
    cs_pin: 5
    dc_pin: 4
    reset_pin:
      number: 48
      inverted: true
    update_interval: never
    invert_colors: false
    auto_clear_enabled: false

touchscreen:
  platform: gt911
  i2c_id: bus_a
  address: 0x5D
  id: device_touchscreen
  interrupt_pin:
    number: GPIO3
    inverted: true
    ignore_strapping_warning: true
  reset_pin:
    number: GPIO2
    inverted: true
  update_interval: 50ms
  on_release:
    then:
      - lambda: |-
          if (id(back_light).current_values.get_brightness() < 0.5) {
            id(idle_timer) = 0;
            id(back_light).turn_on().set_brightness(0.5).perform();
          }

output:
  - platform: ledc
    pin: GPIO47
    id: backlight_output

light:
  - platform: monochromatic
    id: back_light
    name: "LCD Backlight"
    output: backlight_output
    restore_mode: ALWAYS_ON
    default_transition_length: 500ms
    gamma_correct: 1.0
    initial_state:
      state: ON
      brightness: 0.5

interval:
  - interval: 5s
    then:
      - lvgl.widget.update:
          id: antiburn_switch
          state:
            checked: !lambda return id(switch_antiburn).state;
            
      - lvgl.widget.update:
          id: always_on_switch
          state:
            checked: !lambda return id(display_always_on).state;

  - interval: 10s
    then:
      - lvgl.label.update:
          id: info_ip
          text: !lambda |-
            return "IP: " + id(ip_addr).state;
            
      - lvgl.label.update:
          id: info_ssid
          text: !lambda |-
            return "SSID: " + id(connected_ssid).state;
            
      - lvgl.label.update:
          id: info_wifi
          text: !lambda |-
            return "WiFi: " + str_sprintf("%.0f%%", id(wifi_percent).state);
            
      - lvgl.label.update:
          id: info_battery
          text: !lambda |-
            return "Battery: " + str_sprintf("%.0f%%", id(battery_percent).state);

  - interval: 1s
    then:
      - lambda: |-
          // Only increment timer when display is ON and override is OFF
          if (id(back_light).current_values.is_on() && !id(display_override)) {
            id(idle_timer)++;

            // Dim to 25% after 60 seconds of INACTIVITY
            if (id(idle_timer) == 60) {
              id(back_light).turn_on().set_brightness(0.25).perform();
            }

            // Turn off after 120 seconds of CONTINUOUS INACTIVITY
            if (id(idle_timer) >= 120) {
              id(back_light).turn_off();
            }
          }
          
          // Keep display on if override is active
          if (id(display_override) && !id(back_light).current_values.is_on()) {
            id(back_light).turn_on().set_brightness(0.5).perform();
            id(idle_timer) = 0;
          }
          
  - interval: 1s
    then:
      - if:
          condition:
            lambda: return id(arming_timer_active);
          then:
            - lambda: |-
                id(arming_countdown)--;
                if (id(arming_countdown) <= 0) {
                  id(arming_timer_active) = false;
                }
                id(alarm_countdown_value).publish_state(id(arming_countdown));

globals:
  - id: display_override
    type: bool
    initial_value: 'false'
  - id: current_pin
    type: std::string
    initial_value: ""
  - id: time_set_hour
    type: int
    initial_value: "12"
  - id: time_set_minute
    type: int
    initial_value: "0"
  - id: current_page
    type: std::string
    initial_value: '"clock_page"'
  - id: idle_timer
    type: int
    initial_value: '0'
  - id: is_dimmed
    type: bool
    initial_value: 'false'
  - id: time_input
    type: std::string
    initial_value: '""'
  - id: time_period
    type: std::string
    initial_value: '"AM"'
  - id: arming_countdown
    type: int
    initial_value: "0"
  - id: arming_timer_active
    type: bool
    initial_value: "false"
  - id: entered_time
    type: std::string
    initial_value: '""'
  - id: time_set_am_pm
    type: std::string
    initial_value: '"AM"'
    
image:
  - file: "HA1.png"
    id: boot_logo
    resize: 320x240
    type: RGB565
    transparency: alpha_channel

button:
  - platform: restart
    id: reboot
    name: reboot

switch:
  - platform: template
    name: "Display Always On"
    id: display_always_on
    icon: "mdi:monitor"
    optimistic: true
    on_turn_on:
      - lambda: |-
          id(display_override) = true;
          id(back_light).turn_on().set_brightness(0.5).perform();
      - logger.log: "Display always on enabled"
    on_turn_off:
      - lambda: |-
          id(display_override) = false;
          id(idle_timer) = 0;
      - logger.log: "Display always on disabled"

  - platform: template
    id: steph_ceiling_led_switch
    name: "Steph Ceiling LED"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.steph_ceiling_led
      - lvgl.label.update:
          id: ceiling_led_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: light.turn_off
          data:
            entity_id: light.steph_ceiling_led
      - lvgl.label.update:
          id: ceiling_led_lvgl
          text_color: 0xffffff

  - platform: template
    id: string_led_switch
    name: "String LED"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.string_led
      - lvgl.label.update:
          id: string_led_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: light.turn_off
          data:
            entity_id: light.string_led
      - lvgl.label.update:
          id: string_led_lvgl
          text_color: 0xffffff

  - platform: template
    id: main_tv_light_switch
    name: "Main TV Light"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.main_tv_light
      - lvgl.label.update:
          id: main_tv_light_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: light.turn_off
          data:
            entity_id: light.main_tv_light
      - lvgl.label.update:
          id: main_tv_light_lvgl
          text_color: 0xffffff

  - platform: template
    id: mini_led_switch
    name: "Mini LED"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.mini_led
      - lvgl.label.update:
          id: mini_led_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: light.turn_off
          data:
            entity_id: light.mini_led
      - lvgl.label.update:
          id: mini_led_lvgl
          text_color: 0xffffff

  - platform: template
    id: steph_floor_led_switch
    name: "Steph Floor LED"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.steph_floor_led
      - lvgl.label.update:
          id: floor_led_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: light.turn_off
          data:
            entity_id: light.steph_floor_led
      - lvgl.label.update:
          id: floor_led_lvgl
          text_color: 0xffffff

  - platform: template
    id: keiko_led_switch
    name: "Keiko LED"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.keiko_led
      - lvgl.label.update:
          id: keiko_led_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: light.turn_off
          data:
            entity_id: light.keiko_led
      - lvgl.label.update:
          id: keiko_led_lvgl
          text_color: 0xffffff

  - platform: template
    id: fan_plug_switch
    name: "Fan Plug"
    optimistic: true
    on_turn_on:
      - homeassistant.service:
          service: switch.turn_on
          data:
            entity_id: switch.fan_plug_switch
      - lvgl.label.update:
          id: fan_lvgl
          text_color: 0xFFC000
    on_turn_off:
      - homeassistant.service:
          service: switch.turn_off
          data:
            entity_id: switch.fan_plug_switch
      - lvgl.label.update:
          id: fan_lvgl
          text_color: 0xffffff

  - platform: template
    id: ceiling_light_switch
    optimistic: true
    on_turn_off: 
      - homeassistant.action:
          action: light.turn_off
          data:
            entity_id: light.entrance_ceiling
    on_turn_on:
      - homeassistant.service:
          service: light.turn_on
          data:
            entity_id: light.entrance_ceiling
            brightness: '255'

  - platform: template
    id: home_page_flag
    optimistic: true

  - platform: template
    id: countdown_control
    optimistic: true
    on_turn_off: 
      - lvgl.page.show: clock_page
      - script.execute: backlight_off

  - platform: template
    name: Antiburn
    id: switch_antiburn
    icon: mdi:television-shimmer
    optimistic: true
    entity_category: "config"
    turn_on_action:
      - logger.log: "Starting Antiburn"
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:
      - lvgl.pause:
          show_snow: true
    turn_off_action:
      - logger.log: "Stopping Antiburn"
      - if:
          condition: lvgl.is_paused
          then:
            - lvgl.resume:
            - lvgl.widget.redraw:

text_sensor:
  - platform: template
    id: up_sens_text
    name: Device uptime
    entity_category: "diagnostic"
    # icon: mdi:clock

  - platform: wifi_info
    ip_address:
      name: IP Address
      id: ip_addr
      entity_category: "diagnostic"
    ssid:
      id: connected_ssid
      name: SSID
      entity_category: "diagnostic"
    bssid:
      id: connected_bssid
      name: BSSID
      entity_category: "diagnostic"
    mac_address:
      id: device_mac

  - platform: homeassistant
    id: met_weather
    entity_id: weather.home
    on_value:
      then:
        - script.execute: weather_update
        - lvgl.label.update:
            id:
              - display_weather_text
            text: !lambda return x;
         
  - platform: template
    id: pin_test

  - platform: homeassistant
    name: "Alarm Status"
    entity_id: alarm_control_panel.alarmo
    id: alarm_status    
    on_value:
      if:
        condition:
          - lambda: return id(alarm_status).state == "arming";
        then:
          - lambda: |-
              id(arming_countdown) = 30;
              id(arming_timer_active) = true;
              id(alarm_countdown_value).publish_state(30);
          - lvgl.label.update:
              id: alarm_countdown_label
              hidden: false
              text: "30"
          - lvgl.label.update: 
              id: alarm_status_lvgl
              text_color: amber
          - lvgl.obj.update:
              id: alarm_arm_home_btn
              bg_color: amber
          - lvgl.obj.update:
              id: alarm_arm_away_btn
              bg_color: amber
          - lvgl.obj.update:
              id: alarm_arm_night_btn
              bg_color: amber
        else:
          - lambda: |-
              id(arming_timer_active) = false;
              id(arming_countdown) = 0;
              id(alarm_countdown_value).publish_state(-1);
          - lvgl.label.update:
              id: alarm_countdown_label
              hidden: true
          - if:
              condition:
                - lambda: return id(alarm_status).state == "armed_home";
              then:
                - lvgl.label.update: 
                    id: alarm_status_lvgl
                    text_color: red
                    text: "\U000F068A"
                - lvgl.obj.update:
                    id: alarm_arm_home_btn
                    bg_color: red
                - lvgl.label.update: 
                    id: alarm_arm_home_lvgl
                    bg_color: red
                    text: "Armed\nHome"
                - lvgl.obj.update:
                    id: alarm_arm_away_btn
                    bg_color: green
                - lvgl.obj.update:
                    id: alarm_arm_night_btn
                    bg_color: green
              else:
                - if:
                    condition:
                      - lambda: return id(alarm_status).state == "armed_away";
                    then:
                      - lvgl.label.update: 
                          id: alarm_status_lvgl
                          text_color: red
                          text: "\U000F099D"
                      - lvgl.obj.update: 
                          id: alarm_arm_away_btn
                          bg_color: red
                      - lvgl.label.update: 
                          id: alarm_arm_away_lvgl
                          bg_color: red
                          text: "Armed\nAway"
                      - lvgl.obj.update:
                          id: alarm_arm_home_btn
                          bg_color: green
                      - lvgl.obj.update:
                          id: alarm_arm_night_btn
                          bg_color: green
                    else:
                      - if:
                          condition:
                            - lambda: return id(alarm_status).state == "armed_night";
                          then:
                            - lvgl.label.update: 
                                id: alarm_status_lvgl
                                text_color: red
                                text: "\U000F1828"
                            - lvgl.obj.update: 
                                id: alarm_arm_night_btn
                                bg_color: red
                            - lvgl.label.update: 
                                id: alarm_arm_night_lvgl
                                bg_color: red
                                text: "Armed\nNight"
                            - lvgl.obj.update:
                                id: alarm_arm_home_btn
                                bg_color: green
                            - lvgl.obj.update:
                                id: alarm_arm_away_btn
                                bg_color: green
                          else:
                            - if:
                                condition:
                                  - lambda: return id(alarm_status).state == "disarmed";
                                then:
                                  - lvgl.label.update: 
                                      id: alarm_status_lvgl
                                      text_color: green
                                      text: "\U000F099E"
                                  - lvgl.obj.update:
                                      id: alarm_arm_home_btn
                                      bg_color: green
                                  - lvgl.obj.update:
                                      id: alarm_arm_away_btn
                                      bg_color: green
                                  - lvgl.obj.update:
                                      id: alarm_arm_night_btn
                                      bg_color: green
                                  - switch.turn_off: countdown_control
                                else:
                                  - if:
                                      condition:
                                        - lambda: return id(alarm_status).state == "triggered";
                                      then:
                                        - lvgl.page.show: triggered_page
                                      else:
                                        - if:
                                            condition:
                                              - lambda: return id(alarm_status).state == "pending";
                                            then: 
                                              - lvgl.page.show: disarming_page
                                              - switch.turn_on: countdown_control

  - platform: template
    id: countdown_timer
    on_value:
      - lvgl.label.update: 
          id: entrance_delay_lvgl
          text: !lambda return x;

  - platform: homeassistant
    name: "Time Input"
    id: input_datetime_time
    entity_id: input_datetime.time
    internal: true
    on_value:
      then:
        - lambda: |-
            ESP_LOGD("TIME", "Received new time: %s", x.c_str());
            // Update global variables
            std::string time_str = x;
            int hour_24 = 8;
            int minute = 30;
            if (time_str.length() >= 5) {
              size_t colon_pos = time_str.find(":");
              if (colon_pos != std::string::npos) {
                hour_24 = atoi(time_str.substr(0, colon_pos).c_str());
                minute = atoi(time_str.substr(colon_pos+1, 2).c_str());
              }
            }
            id(time_set_hour) = (hour_24 % 12 == 0) ? 12 : (hour_24 % 12);
            id(time_set_am_pm) = (hour_24 < 12) ? "AM" : "PM";
            id(time_set_minute) = minute;

  - platform: homeassistant
    name: "Morning Automation Status"
    entity_id: automation.morning_backup
    id: morning_backup_status
    on_value:
      - if:
          condition:
            - lambda: return x == "on";
          then:
            - lvgl.label.update: 
                id: automation_status_lvgl
                text_color: green
            - lvgl.widget.update:
                id: display_set_time
                hidden: false
            - lvgl.widget.update:
                id: display_date
                translate_y: 0
          else:
            - lvgl.label.update: 
                id: automation_status_lvgl
                text_color: red
            - lvgl.widget.update:
                id: display_set_time
                hidden: true
            - lvgl.widget.update:
                id: display_date
                translate_y: 0

  - platform: homeassistant
    name: "Alarm Time Text"
    id: input_datetime_time_alarm
    entity_id: input_datetime.time
    internal: true
    on_value:
      then:
        - lvgl.label.update:
            id: display_set_time
            text: !lambda |-
              std::string time_str = x;
              int hour = 12;
              int minute = 0;
              const char* period = "PM";

              // Parse HH:MM:SS format
              size_t colon1 = time_str.find(":");
              if (colon1 != std::string::npos) {
                  hour = atoi(time_str.substr(0, colon1).c_str());
                  size_t colon2 = time_str.find(":", colon1+1);
                  if (colon2 != std::string::npos) {
                      minute = atoi(time_str.substr(colon1+1, colon2-(colon1+1)).c_str());
                  }
              }

              // Convert to 12-hour format
              if (hour >= 12) {
                  period = "PM";
                  if (hour > 12) hour -= 12;
              } else {
                  period = "AM";
                  if (hour == 0) hour = 12;
              }

              return str_sprintf("Alarm Set %d:%02d %s", hour, minute, period);

  - platform: homeassistant
    id: input_datetime_time_text
    entity_id: input_datetime.time
    internal: true
              
script:
  - id: time_update
    then:
      - lvgl.label.update:
          id: display_time_blank
          text: !lambda |-
            auto now = id(sntp_time).now();
            int hour = now.hour % 12;
            if (hour == 0) hour = 12;
            return str_sprintf("%d:%02d%s", hour, now.minute, now.hour < 12 ? "am" : "pm");

      - lvgl.label.update:
          id: display_date
          text: !lambda |-
            static const char * const days[] = {"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
            static const char * const months[] = {"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"};
            
            auto now = id(sntp_time).now();
            const char *suffix = (now.day_of_month > 10 && now.day_of_month < 14) ? "th" : 
              (const char*[]){"th","st","nd","rd","th","th","th","th","th","th"}[now.day_of_month % 10];
            
            static char date_buf[64];
            snprintf(date_buf, sizeof(date_buf), "%s, %s %d%s %04d", 
              days[now.day_of_week - 1], months[now.month - 1], now.day_of_month, suffix, now.year);
            return date_buf;

  - id: backlight_off      
    then:
      - light.turn_on: back_light
      - delay: 60s
      - if:
          condition:
            not:
              - lambda: return id(alarm_status).state == "triggered";
          then:
            - lvgl.page.show: clock_page
            - delay: 180s
            - light.turn_off: back_light
    mode: restart

  - id: weather_update
    then:
      - if:
          condition:
            - lambda: return id(met_weather).state == "rainy";
          then:
            - lvgl.label.update:
                id: 
                  - display_weather
                  
                text_font: icon_font_60
                text: "\U000F0597"
          else:
            - if:
                condition:
                  - lambda: return id(met_weather).state == "clear-night";
                then:
                  - lvgl.label.update:
                      id: 
                        - display_weather
                        
                      text_font: icon_font_60
                      text: "\U000F0594"               
                else:
                  - if:
                      condition:
                        - lambda: return id(met_weather).state == "exceptional";
                      then:
                        - lvgl.label.update:
                            id: 
                              - display_weather
                              
                            text_font: icon_font_60
                            text: "\U000F0590"
                      else:
                        - if:
                            condition:
                              - lambda: return id(met_weather).state == "hail";
                            then:
                              - lvgl.label.update:
                                  id: 
                                    - display_weather
                                    
                                  text_font: icon_font_60
                                  text: "\U000F0592"
                            else:
                              - if:
                                  condition:
                                    - lambda: return id(met_weather).state == "lightning";
                                  then:
                                    - lvgl.label.update:
                                        id: 
                                          - display_weather
                                          
                                        text_font: icon_font_60
                                        text: "\U000F0593"
                                  else:
                                    - if:
                                        condition:
                                          - lambda: return id(met_weather).state == "lightning-rainy";
                                        then:
                                          - lvgl.label.update:
                                              id: 
                                                - display_weather
                                                
                                              text_font: icon_font_60
                                              text: "\U000F067E"
                                        else:
                                          - if:
                                              condition:
                                                - lambda: return id(met_weather).state == "partlycloudy";
                                              then:
                                                - lvgl.label.update:
                                                    id: 
                                                      - display_weather
                                                      
                                                    text_font: icon_font_60
                                                    text: "\U000F0595"
                                              else:
                                                - if:
                                                    condition:
                                                      - lambda: return id(met_weather).state == "pouring";
                                                    then:
                                                      - lvgl.label.update:
                                                          id: 
                                                            - display_weather
                                                            
                                                          text_font: icon_font_60
                                                          text: "\U000F0596"           
                                                    else:
                                                      - if:
                                                          condition:
                                                            - lambda: return id(met_weather).state == "snowy";
                                                          then:
                                                            - lvgl.label.update:
                                                                id: 
                                                                  - display_weather
                                                                  
                                                                text_font: icon_font_60
                                                                text: "\U000F0598"  
                                                          else:
                                                            - if:
                                                                condition:
                                                                  - lambda: return id(met_weather).state == "snowy-rainy";
                                                                then:
                                                                  - lvgl.label.update:
                                                                      id: 
                                                                        - display_weather
                                                                        
                                                                      text_font: icon_font_60
                                                                      text: "\U000F067F"  
                                                                else:
                                                                  - if:
                                                                      condition:
                                                                        - lambda: return id(met_weather).state == "sunny";
                                                                      then:
                                                                        - lvgl.label.update:
                                                                            id: 
                                                                              - display_weather
                                                                              
                                                                            text_font: icon_font_60
                                                                            text: "\U000F0599"    
                                                                      else:
                                                                        - if:
                                                                            condition:
                                                                              - lambda: return id(met_weather).state == "sunny-rainy";
                                                                            then:
                                                                              - lvgl.label.update:
                                                                                  id: 
                                                                                    - display_weather
                                                                                    
                                                                                  text_font: icon_font_60
                                                                                  text: "\U000F0596"  
                                                                            else:
                                                                              - if:
                                                                                  condition:
                                                                                    - lambda: return id(met_weather).state == "windy";
                                                                                  then:
                                                                                    - lvgl.label.update:
                                                                                        id: 
                                                                                          - display_weather
                                                                                          
                                                                                        text_font: icon_font_60
                                                                                        text: "\U000F059D"  
                                                                                  else:
                                                                                    - if:
                                                                                        condition:
                                                                                          - lambda: return id(met_weather).state == "windy-variant";
                                                                                        then:
                                                                                          - lvgl.label.update:
                                                                                              id: 
                                                                                                - display_weather
                                                                                                
                                                                                              text_font: icon_font_60
                                                                                              text: "\U000F059E" 
                                                                                        else:
                                                                                          - if:
                                                                                              condition:
                                                                                                - lambda: return id(met_weather).state == "sunny-off";
                                                                                              then:
                                                                                                - lvgl.label.update:
                                                                                                    id: 
                                                                                                      - display_weather
                                                                                                      
                                                                                                    text_font: icon_font_60
                                                                                                    text: "\U000F14E4"  
                                                                                              else:
                                                                                                - if:
                                                                                                    condition:
                                                                                                      - lambda: return id(met_weather).state == "cloudy";
                                                                                                    then:
                                                                                                      - lvgl.label.update:
                                                                                                          id: 
                                                                                                            - display_weather
                                                                                                            
                                                                                                          text_font: icon_font_60
                                                                                                          text: "\U000F0590"

sensor:  
  - platform: wifi_signal
    name: "WiFi db"
    id: wifi_signal_db
    update_interval: 30s
    
  - platform: copy 
    source_id: wifi_signal_db
    name: "WiFi Signal"
    id: wifi_percent
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "%"
    entity_category: "diagnostic"
    device_class: ""   
    
  - platform: homeassistant
    id: out_temp
    entity_id: sensor.outside_temperature
    internal: true 
    on_value:
      - lvgl.label.update:
          id: 
            - out_temp_lvgl
          text:
            format: "%.0f°C"
            args: [ 'x' ]

  - platform: adc
    pin: GPIO10
    id: battery_voltage
    name: "Battery Voltage"
    unit_of_measurement: "V"
    accuracy_decimals: 2
    device_class: voltage
    entity_category: diagnostic
    update_interval: 30s
    attenuation: 12db
    filters:
      - multiply: 4.11

  - platform: template
    id: battery_percent
    name: "Battery Level"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    device_class: battery
    entity_category: diagnostic
    lambda: |-
      float voltage = id(battery_voltage).state;
      // Li-ion battery voltage range (2.7V-4.2V)
      return (voltage - 2.7) / (4.2 - 2.7) * 100.0;
    filters:
      - clamp:
          min_value: 0
          max_value: 100
    # on_value:
    #   - lvgl.label.update:
    #       id: battery_label
    #       text: !lambda return str_sprintf("%.0f%%", x);

  - platform: aht10 
    i2c_id: bus_b
    variant: AHT20
    temperature:
      name: "Temperature"
      id: s3temp
    humidity:
      name: "Humidity"
      id: s3hum
    update_interval: 60s

  - platform: template
    id: alarm_countdown_value
    internal: true
    accuracy_decimals: 0
    on_value:
      then:
        - if:
            condition:
              lambda: return x >= 0;
            then:
              - lvgl.label.update:
                  id: alarm_countdown_label
                  text: !lambda |-
                    return str_sprintf("%02d", static_cast<int>(x));
                  hidden: false
            else:
              - lvgl.label.update:
                  id: alarm_countdown_label
                  hidden: true

  - platform: template
    id: brightness_percent
    name: "Screen Brightness"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    lambda: |-
      return id(back_light).current_values.get_brightness() * 100;
    on_value:
      - lvgl.label.update:
          id: brightness_label
          text: !lambda return str_sprintf("%.0f%%", x);

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO21
    name: "Presence detect"
    disabled_by_default: false
    device_class: "occupancy"

  - platform: homeassistant
    id: steph_ceiling_led_state
    entity_id: light.steph_ceiling_led
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: steph_ceiling_led_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: ceiling_led_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: ceiling_led_lvgl
                  text_color: 0xffffff

  - platform: homeassistant
    id: string_led_state
    entity_id: light.string_led
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: string_led_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: string_led_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: string_led_lvgl
                  text_color: 0xffffff

  - platform: homeassistant
    id: main_tv_light_state
    entity_id: light.main_tv_light
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: main_tv_light_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: main_tv_light_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: main_tv_light_lvgl
                  text_color: 0xffffff

  - platform: homeassistant
    id: mini_led_state
    entity_id: light.mini_led
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: mini_led_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: mini_led_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: mini_led_lvgl
                  text_color: 0xffffff

  - platform: homeassistant
    id: steph_floor_led_state
    entity_id: light.steph_floor_led
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: steph_floor_led_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: floor_led_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: floor_led_lvgl
                  text_color: 0xffffff

  - platform: homeassistant
    id: keiko_led_state
    entity_id: light.keiko_led
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: keiko_led_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: keiko_led_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: keiko_led_lvgl
                  text_color: 0xffffff

  - platform: homeassistant
    id: fan_plug_state
    entity_id: switch.fan_plug_switch
    internal: true
    on_state:
      then:
        - switch.template.publish:
            id: fan_plug_switch
            state: !lambda "return x;"
        - if:
            condition:
              lambda: "return x;"
            then:
              - lvgl.label.update:
                  id: fan_lvgl
                  text_color: 0xFFC000
            else:
              - lvgl.label.update:
                  id: fan_lvgl
                  text_color: 0xffffff

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # SYSTEM STATUS SENSORS
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  - platform: homeassistant
    id: all_lights_state
    entity_id: light.all_lights
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: lights_status_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;
            then:
              - lvgl.label.update:
                  id: lights_status_lvgl
                  text_color: red
            else:
              - lvgl.label.update:
                  id: lights_status_lvgl
                  text_color: green

  - platform: homeassistant
    id: all_windows_state
    entity_id: binary_sensor.windows
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: window_status_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;
            then:
              - lvgl.label.update:
                  id: window_status_lvgl
                  text_color: red
                  text: "\U000F05B1"
            else:
              - lvgl.label.update:
                  id: window_status_lvgl
                  text_color: green
                  text: "\U000F05AE"

  - platform: homeassistant
    id: all_doors_state
    entity_id: binary_sensor.outside_doors
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: door_status_lvgl
            state:
              checked: !lambda return x;
        - if:
            condition:
              lambda: return x == true;
            then:
              - lvgl.label.update:
                  id: door_status_lvgl
                  text_color: red
                  text: "\U000F081C"
            else:
              - lvgl.label.update:
                  id: door_status_lvgl
                  text_color: green
                  text: "\U000F081B"

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # DOOR/WINDOW SENSORS
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  - platform: homeassistant
    id: front_door_state
    entity_id: binary_sensor.frontdoor_door
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: status_front_door_label
            hidden: !lambda return !x;

  - platform: homeassistant
    id: back_door_state
    entity_id: binary_sensor.backdoor_door
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: status_back_door_label
            hidden: !lambda return !x;

  - platform: homeassistant
    id: bathroom_window_state
    entity_id: binary_sensor.bathroom_window
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: status_bathroom_window_label
            hidden: !lambda return !x;

  - platform: homeassistant
    id: charles_window_state
    entity_id: binary_sensor.charles_window
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: status_charles_window_label
            hidden: !lambda return !x;

  - platform: homeassistant
    id: mediaroom_window_state
    entity_id: binary_sensor.mediaroom_window
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: status_mediaroom_window_label
            hidden: !lambda return !x;

  - platform: homeassistant
    id: stephs_window_state
    entity_id: binary_sensor.stephs_window
    internal: true
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: status_stephs_window_label
            hidden: !lambda return !x;

  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  # ON-DEVICE BUTTONS
  # ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  - platform: gpio
    id: top_left_button
    name: "Backlight Toggle"
    internal: true
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
      ignore_strapping_warning: true
    on_press:
      then:
        - light.toggle: back_light
        - if:
            condition:
              light.is_on: back_light
            then:
              - lvgl.page.show: clock_page
              - lambda: |-
                  id(current_page) = "clock_page";

  - platform: gt911
    id: home_button
    index: 0
    on_press:
      then:
        - lambda: |-
            id(idle_timer) = 0;
            id(back_light).turn_on().set_brightness(0.5).perform();
        - if:
            condition:
              light.is_off: back_light
            then:
              - light.turn_on: back_light
              - lvgl.page.show: clock_page
              - lambda: 'id(current_page) = "clock_page";'
        - if:
            condition:
              lambda: |-
                return id(back_light).current_values.is_on();
            then:
              - if:
                  condition:
                    lambda: |-
                      return (id(current_page) == "clock_page");
                  then:
                    - lvgl.page.show: button_page
                  else:
                    - lvgl.page.show: clock_page
                  
font:
  - file: "gfonts://Montserrat"
    id: montserrat_12
    size: 12
  - file: "gfonts://Montserrat"
    id: montserrat_16
    size: 16
  - file: "gfonts://Montserrat"
    id: montserrat_18
    size: 18
  - file: "gfonts://Montserrat"
    id: montserrat_20
    size: 20
  - file: "gfonts://Montserrat"
    id: montserrat_24
    size: 24
  - file: "gfonts://Montserrat"
    id: montserrat_30
    size: 30
  - file: "gfonts://Montserrat"
    id: montserrat_40
    size: 40
  - file: "gfonts://Montserrat"
    id: montserrat_48
    size: 48
  
  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/consola.ttf"
    id: my_font80
    size: 80

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/consola.ttf"
    id: my_font40
    size: 40   
    glyphs:
      '${font_glyphs}'
   
  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/consola.ttf"
    id: my_font160
    size: 160
    glyphs:
      '${font_glyphs}'

  - file: "/config/esphome/materialdesignicons-webfont.ttf"
    id: icon_font_80
    size: 40
    bpp: 4
    glyphs: &icon_glyphs 
      - "\U000F0590" # mdi-weather-cloudy
      - "\U000F0F2F" # mdi-weather-cloudy-alert
      - "\U000F0E6E" # mdi-weather-cloudy-arrow-right
      - "\U000F0591" # mdi-weather-fog
      - "\U000F0592" # mdi-weather-hail
      - "\U000F0F30" # mdi-weather-hazy
      - "\U000F0898" # mdi-weather-hurricane
      - "\U000F0593" # mdi-weather-lightning
      - "\U000F067E" # mdi-weather-lightning-rainy
      - "\U000F0594" # mdi-weather-night
      - "\U000F0F31" # mdi-weather-night-partly-cloudy
      - "\U000F0595" # mdi-weather-partly-cloudy
      - "\U000F0F32" # mdi-weather-partly-lightning
      - "\U000F0F33" # mdi-weather-partly-rainy
      - "\U000F0F34" # mdi-weather-partly-snowy
      - "\U000F0F35" # mdi-weather-partly-snowy-rainy
      - "\U000F0596" # mdi-weather-pouring
      - "\U000F0597" # mdi-weather-rainy
      - "\U000F0598" # mdi-weather-snowy
      - "\U000F0F36" # mdi-weather-snowy-heavy
      - "\U000F067F" # mdi-weather-snowy-rainy
      - "\U000F0599" # mdi-weather-sunny
      - "\U000F0F37" # mdi-weather-sunny-alert
      - "\U000F14E4" # mdi-weather-sunny-off
      - "\U000F059A" # mdi-weather-sunset
      - "\U000F059B" # mdi-weather-sunset-down
      - "\U000F059C" # mdi-weather-sunset-up
      - "\U000F0F38" # mdi-weather-tornado
      - "\U000F059D" # mdi-weather-windy
      - "\U000F059E" # mdi-weather-windy-variant
      - "\U000F0450" # mdi-refresh
      - "\U000F0A19" # mdi-toggle off
      - "\U000F0521" # mdi-toggle on
      - "\U000F024A" # mdi-garden
      - "\U000F04C8" # mdi-spots
      - "\U000F1722" # mdi-fire off
      - "\U000F02DC" # mdi-home button
      - "\U000F0B2A" # mdi-right
      - "\U000F04B9" # mdi-living room
      - "\U000F1061" # mdi-dining 502
      - "\U000F04DE" # mdi-kitchen stove
      - "\U000F1051" # mdi-led strip variant
      - "\U000F06E8" # mdi-light bulb illuminated
      - "\U000F0335" # mdi-light bulb off
      - "\U000F0210" # mdi-fan
      - "\U000F050F" # mdi-temp
      - "\U000F0769" # mdi-ceiling
      - "\U000F18DD" # mdi-ceiling multiple
      - "\U000F1798" # mdi-ceiling fan light
      - "\U000F091C" # mdi-wall light
      - "\U000F1B94" # mdi-sleep
      - "\U000F04CD" # mdi-stairs
      - "\U000F07D0" # mdi-api connected
      - "\U000F1828" # mdi-armed night
      - "\U000F068A" # mdi-alarm home
      - "\U000F099D" # mdi-alarm away
      - "\U000F099E" # mdi-disarmed
      - "\U000F0483" # mdi-security
      - "\U000F081B" # mdi-door closed
      - "\U000F081C" # mdi-door open
      - "\U000F1254" # mdi-lights group
      - "\U000F05B1" # mdi-windows open
      - "\U000F05AE" # mdi-windows closed
      - "\U000F0020" # mdi-alarm clock
      - "\U000F02FD" # mdi-information
      - "\U000F08D6" # mdi-settings cogs
      - "\U000F16BD" # mdi-wifi check
      - "\U000F0023" # mdi-alarm clock off
      - "\U000F012C" # mdi-check mark 
      - "\U000F12BA" # mdi-string LED
      - "\U000F0502" # mdi-television
      - "\U000F0A43" # mdi-dog 
      - "\U000F0099" # mdi-bed-outline
      - "\U000F0A44" # mdi-dog-side
      - "\U000F006E" # mdi-backspace
      

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_120
    size: 60
    glyphs: *icon_glyphs

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_60
    size: 30
    bpp: 4
    glyphs: *icon_glyphs
          
  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_180
    size: 90
    glyphs: *icon_glyphs

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_40
    size: 20
    bpp: 4
    glyphs: *icon_glyphs 

  - file: "https://github.com/BigBobbas/ESP32-S3-Box3-Custom-ESPHome/raw/main/fonts/materialdesignicons-webfont.ttf"
    id: icon_font_10
    size: 10
    bpp: 4
    glyphs: *icon_glyphs 
     
color:
  - id: dk_gray
    hex: '404040'
  - id: gray
    hex: '999999'
  - id: green
    hex: '75D15F'
  - id: leaf_green
    hex: '60A86A'
  - id: red
    hex: 'FF0000'
  - id: blue
    hex: '47B7E9'
  - id: blue_drk
    hex: '085296'
  - id: amber
    hex: 'FBAB35'
  - id: lime
    hex: '20FC30'
  - id: pink
    hex: 'D92BBC'
  - id: yellow
    hex: 'FFC000'
  - id: black
    hex: '000000'
  - id: white
    hex: 'ffffff'
  - id: purple
    hex: '73264D'
  - id: light_blue
    hex: '2E98DA'
  - id: lilac
    hex: 'D6BED0'
  - id: bg_blue
    hex: '032341'
  - id: bg_purple
    hex: 'A16793'
  - id: bg_green
    hex: '05350B'
  - id: bg_red
    hex: '3C0000'
  - id: bg_pink
    hex: '61034D'
  - id: bg_charcoal
    hex: '141414'
  - id: bg_brown
    hex: '41220D'
  - id: bg_grey
    hex: '4F4F4F'
  - id: dk_blue
    hex: '00007f' 
  - id: lt_blue
    hex: '75ade0' 
  - id: mid_blue
    hex: '2478b7'
  - id: dk_green
    hex: '2c8f01'
  - id: lt_green
    hex: '39b801' 
  - id: dk_red
    hex: '9d0a00'
  - id: lt_red
    hex: 'e10f00'

lvgl:
  displays:
    - device_display
  touchscreens:
    - device_touchscreen
  top_layer:
    widgets:
      - obj:
          id: boot_screen
          x: 0
          y: 0
          width: 320         
          height: 240
          bg_color: 0x191919
          bg_opa: COVER
          radius: 0
          pad_all: 0
          border_width: 0
          widgets:
            - image:
                id: boot_image
                src: boot_logo
                #align: CENTER
                x: 0
                y: 0
                width: 320     
                height: 240
                #zoom: 10.0
                radius: 0
                pad_all: 0
                border_width: 0
            - spinner:
                align: BOTTOM_MID
                y: -40
                height: 50
                width: 50
                spin_time: 1s
                arc_length: 60deg
                arc_width: 8
                indicator:
                  arc_color: 0x18bcf2
                  arc_width: 8
          on_press:
            - lvgl.widget.hide: boot_screen
  theme:
    # button:
    #   bg_color: dk_gray
    #   bg_opa: COVER
    #   border_color: black
    #   border_width: 0
    #   text_color: white
    #   radius: 20
    #   shadow_color: black
    #   shadow_ofs_x: 0
    #   shadow_ofs_y: 0
    #   shadow_spread: 3
    #   shadow_width: 5
    #   shadow_opa: 70%
    #   checked: 
    #     bg_color: dk_gray
    #     bg_opa: COVER
    #     border_color: dk_gray
    #     border_width: 0
    #     #text_color: yellow
    #     radius: 20
    #     shadow_color: dk_gray
    #     shadow_ofs_x: 0
    #     shadow_ofs_y: 0
    #     shadow_spread: 5
    #     shadow_width: 5
    #     shadow_opa: 70%

    switch:
      bg_color: 0x4A4A4A
      bg_grad_color: 0x696969
      bg_grad_dir: VER
      bg_opa: COVER
      checked:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0x808080
        bg_grad_color: 0xC0C0C0
        bg_grad_dir: VER
        bg_opa: COVER
    slider:
      border_width: 1
      border_opa: 15%
      bg_color: 0xcccaca
      bg_opa: 15%
      indicator:
        bg_color: 0x1d5f96
        bg_grad_color: 0x03324A
        bg_grad_dir: VER
        bg_opa: COVER
      knob:
        bg_color: 0x2F8CD8
        bg_grad_color: 0x005782
        bg_grad_dir: VER
        bg_opa: COVER
        border_color: 0x0077b3
        border_width: 0
        text_color: 0xFFFFFF
    image: 
      border_width: 0
        
  style_definitions:
  ### clock page styles ###
    - id: top_clock_bar
      bg_color: black
      text_color: amber
      text_align: left
      text_font: montserrat_10
      align: TOP_LEFT
      width: 100%
      height: 20%    
      border_width: 0
      radius: 0
      scrollbar_mode: "OFF"
      clip_corner: true      
      pad_all: 0             

    - id: main_clock_content
      bg_color: black
      text_color: red
      text_align: CENTER
      align: CENTER
      width: 100%
      height: 60%    
      border_width: 0
      radius: 0   
      scrollbar_mode: "OFF"  

    - id: bottom_clock_bar
      bg_color: black
      text_align: left
      text_font: montserrat_10
      align: BOTTOM_LEFT
      width: 100%
      height: 20%    
      border_width: 0
      radius: 0
      scrollbar_mode: "OFF"
########################################

 ### Buttons Page styles ###
    - id: bp_button_style
      bg_color: dk_blue
      bg_grad_color: mid_blue
      bg_grad_dir: VER
      border_width: 2
      radius: 12
      shadow_color: 0x1A2B3C
      shadow_ofs_x: 2
      shadow_ofs_y: 2
      shadow_spread: 8
      shadow_width: 6
      shadow_opa: 50%
      text_font: montserrat_16

    - id: bp_main_content
      bg_color: black
      text_color: amber
      text_align: CENTER
      text_font: montserrat_14
      width: 100%
      height: 100%    
      align: CENTER
      border_width: 0
      radius: 0  
########################################

######## set alarm clock page styles ########
    - id: top_bar_sac  # sac = set_alarm_clock
      bg_color: black
      text_color: white
      text_align: CENTER
      text_font: montserrat_12
      align: TOP_MID
      width: 100%
      height: 25%
      border_width: 0
      radius: 0
      scrollbar_mode: "OFF"
      clip_corner: true

    - id: main_content_sac
      bg_color: black
      text_color: white
      align: BOTTOM_MID
      text_align: CENTER
      scrollbar_mode: "off"
      width: 100%
      height: 75%
      border_width: 0
      radius: 0

    - id: buttons_sac
      bg_color: dk_blue
      bg_grad_color: mid_blue
      bg_grad_dir: VER
      border_width: 0
      radius: 12
      shadow_color: 0x1A2B3C
      shadow_ofs_x: 2
      shadow_ofs_y: 2
      shadow_spread: 0
      shadow_width: 0
      shadow_opa: 50%
      text_font: montserrat_16

    - id: confirm_button_sac
      bg_color: dk_green
      bg_grad_color: lt_green
      bg_grad_dir: VER
      border_width: 0
      radius: 12
      shadow_color: 0x1A2B3C
      shadow_ofs_x: 2
      shadow_ofs_y: 2
      shadow_spread: 0
      shadow_width: 0
      shadow_opa: 50%
      text_font: montserrat_16

    - id: back_button_sac
      bg_color: dk_red
      bg_grad_color: lt_red
      bg_grad_dir: VER
      border_width: 0
      radius: 12
      shadow_color: 0x1A2B3C
      shadow_ofs_x: 2
      shadow_ofs_y: 2
      shadow_spread: 0
      shadow_width: 0
      shadow_opa: 50%
      text_font: montserrat_16
  ########################################

  ### others ###
    - id: main_content
      bg_color: black
      text_color: amber
      text_align: CENTER
      width: 100%
      height: 80%    
      align: TOP_MID
      border_width: 0
      radius: 0       
     
    - id: bottom_content_bar
      bg_color: bg_charcoal
      text_color: amber
      text_align: left
      text_font: montserrat_10
      align: BOTTOM_LEFT
      width: 100%
      height: 20%    
      border_width: 0
      radius: 0

    - id: top_content_bar
      bg_color: bg_charcoal
      text_color: amber
      text_align: left
      text_font: montserrat_10
      align: TOP_LEFT
      width: 100%
      height: 20%    
      border_width: 0
      radius: 0

    - id: triggered_content
      bg_color: red
      text_color: amber
      text_align: CENTER
      width: 100%
      height: 100%    
      align: TOP_MID
      border_width: 0
      radius: 0   

    - id: timer_style
      bg_opa: 0
      border_width: 0  

#################### buttons page ####################
  pages:
    - id: button_page
      widgets:
        - obj: 
            styles: bp_main_content
            text_font: montserrat_20
            width: 100%
            height: 100%
            layout: 
              type: GRID 
              grid_columns: [FR(1), FR(1), FR(1), FR(1)] 
              grid_rows: [FR(1), FR(1)]
              pad_column: 2
              pad_row: 0
            widgets:
              - button:
                  id: button_1
                  styles: bp_button_style
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: ceiling_led_lvgl
                        text_font: icon_font_120
                        text: "\U000F1051"
                        text_color: !lambda |-
                          return id(steph_ceiling_led_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: steph_ceiling_led_switch

              - button:
                  id: button_2
                  styles: bp_button_style
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: string_led_lvgl
                        text_font: icon_font_120
                        text: "\U000F12BA"
                        text_color: !lambda |-
                          return id(string_led_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: string_led_switch

              - button:
                  id: button_3
                  styles: bp_button_style
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: main_tv_light_lvgl
                        text_font: icon_font_120
                        text: "\U000F0502"
                        text_color: !lambda |-
                          return id(main_tv_light_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: main_tv_light_switch

              - button:
                  id: button_4
                  styles: bp_button_style
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 0
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: mini_led_lvgl
                        text_font: icon_font_120
                        text: "\U000F1051"
                        text_color: !lambda |-
                          return id(mini_led_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: mini_led_switch

              - button:
                  id: button_5
                  styles: bp_button_style
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 1
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: fan_lvgl
                        text_font: icon_font_120
                        text: "\U000F0210"
                        text_color: !lambda |-
                          return id(fan_plug_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: fan_plug_switch

              - button:
                  id: button_6
                  styles: bp_button_style
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 1
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: floor_led_lvgl
                        text_font: icon_font_120
                        text: "\U000F0099"
                        text_color: !lambda |-
                          return id(steph_floor_led_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: steph_floor_led_switch

              - button:
                  id: button_7
                  styles: bp_button_style
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 1
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: keiko_led_lvgl
                        text_font: icon_font_120
                        text: "\U000F0A43"
                        text_color: !lambda |-
                          return id(keiko_led_switch).state ? 
                            lv_color_hex(0xffff00) : 
                            lv_color_hex(0xffffff);
                        align: CENTER
                  on_click:
                    - switch.toggle: keiko_led_switch                

              - button:
                  styles: bp_button_style
                  checkable: false
                  id: button_8
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 1
                  grid_cell_x_align: STRETCH
                  grid_cell_y_align: STRETCH
                  width: 100%
                  height: 100%
                  widgets:
                    - label:
                        id: heat_boost_lvgl
                        text_font: icon_font_120
                        text: "\U000F08D6"
                        text_color: white
                        align: CENTER
                  on_click:
                    - lvgl.page.show: settings_page            

      on_load:   
        - switch.turn_on: home_page_flag  
        - lambda: id(current_page) = "button_page";     
      on_unload:
        - switch.turn_off: home_page_flag

#################### clock page ####################
    - id: clock_page
      widgets:
        - obj:
            width: 100%
            height: 100%
            bg_color: black
            widgets:
              - obj:
                  styles: top_clock_bar
                  scrollable: false
                  text_color: grey
                  widgets:
                    # - label:
                    #     id: battery_label
                    #     align: TOP_LEFT
                    #     text_font: montserrat_20
                    #     #text_color: white
                    #     text: "0%"
                    #     #translate_y: 1 
                    
                    - label:
                        id: alarm_status_lvgl
                        align: TOP_LEFT
                        # translate_x: 50
                        text_font: icon_font_60
                        #text_color: red
                        text: "\U000F099E"
                        on_click:
                          - lvgl.page.show: alarm_page

                    - label:
                        id: door_status_lvgl
                        align: TOP_MID
                        text_font: icon_font_60
                        text_color: green
                        text: "\U000F081B"
                        translate_x: -30
                        on_click:
                          lvgl.page.show: status_page

                    - label:
                        id: window_status_lvgl
                        align: TOP_MID
                        text_font: icon_font_60
                        text_color: green
                        text: "\U000F05AE"
                        on_click:
                          lvgl.page.show: status_page

                    - label:
                        id: lights_status_lvgl
                        align: TOP_MID
                        translate_x: 30
                        text_font: icon_font_60
                        text_color: green
                        text: "\U000F1254"
                        on_click:
                          lvgl.page.show: status_page

                    - label:
                        id: lbl_hastatus
                        align: TOP_RIGHT
                        translate_x: -60
                        text_font: icon_font_60
                        text: "\U000F07D0"
                        text_color: lt_blue
                        hidden: true

                    - label:
                        id: automation_status_lvgl
                        align: TOP_RIGHT
                        text_font: icon_font_60
                        text: "\U000F0020"
                        #text_color: red
                        #translate_y: 1
                        on_click:
                          - homeassistant.service:
                              service: automation.toggle
                              data:
                                entity_id: automation.morning_backup

              - obj: 
                  styles: main_clock_content
                  scrollbar_mode: "OFF"
                  layout:
                    type: flex
                    flex_flow: column
                    flex_align_main: CENTER
                    flex_align_cross: CENTER
                    flex_align_track: CENTER
                  widgets:    
                    - label:
                        id: display_time_blank
                        text_align: CENTER
                        text_color: red
                        text_font: montserrat_48
                        text: " "

                    - label:
                        id: display_set_time
                        text: "Loading..."
                        text_align: CENTER
                        text_color: green
                        text_font: montserrat_24
                        on_click:
                          - lvgl.page.show: set_alarm_page
                        
                    - label:
                        id: display_date
                        text_align: CENTER
                        text_color: dk_blue
                        text_font: montserrat_24
                        text: " "

              - obj: 
                  styles: bottom_clock_bar
                  text_color: grey
                  scrollbar_mode: "OFF"
                  widgets:            
                    # - label:
                    #     id: out_temp_lvgl_icon
                    #     align: BOTTOM_LEFT
                    #     text_font: icon_font_40
                    #     text_color: yellow
                    #     text: "\U000F050F"

                    - label:
                        id: out_temp_lvgl
                        align: BOTTOM_LEFT
                        # translate_x: 20
                        #translate_y: 5
                        text_color: yellow
                        text_font: montserrat_18
                        text: " "

                    - label:
                        id: display_weather
                        align: BOTTOM_LEFT
                        translate_x: 50
                        text_font: icon_font_10
                        text: "\U000F14E4"

                    - label:
                        id: display_weather_text
                        align: BOTTOM_RIGHT
                        text_color: yellow
                        #translate_x: 60
                        text_font: montserrat_20
                        text: " "

      on_load:
        - lambda: id(current_page) = "clock_page";

#################### alarm control page ####################
    - id: alarm_page
      styles: main_content
      widgets: 
        - obj: 
            width: 100%
            height: 100%
            bg_color: black
            scrollable: false
            layout: 
              type: flex
              flex_flow: column
              flex_align_main: SPACE_EVENLY
              flex_align_cross: CENTER
            widgets: 
              - obj: 
                  width: 100%
                  height: 45%
                  bg_color: black
                  border_width: 0
                  layout: 
                    type: flex
                    flex_flow: row
                    flex_align_main: SPACE_EVENLY
                    flex_align_cross: CENTER
                  widgets: 
                    - obj:
                        id: alarm_arm_home_btn
                        width: 45%
                        height: 85%
                        bg_color: green
                        radius: 8
                        scrollable: false
                        widgets:
                          - label:
                              id: alarm_arm_home_lvgl
                              text: "Arm\nHome"
                              text_font: montserrat_20
                              text_color: white
                              align: CENTER
                              text_align: CENTER
                        on_press:
                          - homeassistant.service:
                              service: alarm_control_panel.alarm_arm_home
                              data:
                                entity_id: alarm_control_panel.alarmo
                                code: !lambda return id(current_pin).c_str();
                          - lambda: |-
                              id(current_pin) = "";

                    - obj:
                        id: alarm_arm_away_btn
                        width: 45%
                        height: 85%
                        bg_color: green
                        radius: 8
                        scrollable: false
                        widgets:
                          - label:
                              id: alarm_arm_away_lvgl
                              text: "Arm\nAway"
                              text_font: montserrat_20
                              text_color: white
                              align: CENTER
                              text_align: CENTER
                        on_press:
                          - homeassistant.service:
                              service: alarm_control_panel.alarm_arm_away
                              data:
                                entity_id: alarm_control_panel.alarmo
                                code: !lambda return id(current_pin).c_str();
                          - lambda: |-
                              id(current_pin) = "";

              - label:
                  id: alarm_countdown_label
                  text: "30"
                  text_color: gray
                  text_font: montserrat_40
                  hidden: true
                  align: CENTER
                  styles: timer_style

              - obj: 
                  width: 100%
                  height: 45%
                  bg_color: black
                  border_width: 0
                  layout: 
                    type: flex
                    flex_flow: row
                    flex_align_main: SPACE_EVENLY
                    flex_align_cross: CENTER
                  widgets: 
                    - obj:
                        id: alarm_arm_night_btn
                        width: 45%
                        height: 85%
                        bg_color: green
                        radius: 8
                        scrollable: false
                        widgets:
                          - label:
                              id: alarm_arm_night_lvgl
                              text: "Arm\nNight"
                              text_font: montserrat_20
                              text_color: white
                              align: CENTER
                              text_align: CENTER
                        on_press:
                          - homeassistant.service:
                              service: alarm_control_panel.alarm_arm_night
                              data:
                                entity_id: alarm_control_panel.alarmo
                                code: !lambda return id(current_pin).c_str();
                          - lambda: |-
                              id(current_pin) = "";

                    - obj:
                        id: disarm_btn
                        width: 45%
                        height: 85%
                        bg_color: red
                        radius: 8
                        scrollable: false
                        widgets:
                          - label:
                              id: disarm_label
                              text: "Disarm"
                              text_font: montserrat_20
                              text_color: white
                              align: CENTER
                              text_align: CENTER
                        on_press:
                          - homeassistant.service:
                              service: alarm_control_panel.alarm_disarm
                              data:
                                entity_id: alarm_control_panel.alarmo
                                code: !lambda return id(current_pin).c_str();
                          - lambda: |-
                              id(current_pin) = "";

      on_load:
        - lambda: id(current_page) = "alarm_page";

#################### disarmed page ####################
    - id: disarmed_page
      widgets:
        - obj:
            width: 100%
            height: 100%
            bg_color: green
            widgets:
              - label:
                  text: "Disarmed"
                  text_color: white
                  text_font: montserrat_30
                  align: CENTER
                  text_align: CENTER

#################### triggered page ####################
    - id: triggered_page
      widgets:
        - obj: 
            styles: triggered_content
            border_width: 0
            text_color: white
            bg_color: red
            widgets: 
              - label:
                  align: TOP_MID
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 10
                  text_font: montserrat_30
                  text: "ALARM" 
              - label:
                  align: CENTER
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 50
                  text_font: montserrat_30
                  text: "TRIGGERED" 
              - button:
                  checkable: true
                  id: disarm_button
                  align: BOTTOM_MID
                  pressed:
                    bg_color: red
                  widgets:
                    - label:
                        text_font: montserrat_18
                        text: "Disarm"
                        align: CENTER  
                  on_press:
                    - homeassistant.service:
                        service: alarm_control_panel.alarm_disarm
                        data:
                          entity_id: alarm_control_panel.alarmo
                    - lambda: |-
                        id(current_pin) = "";
                    - lvgl.page.show: disarmed_page
                    - delay: 10s
                    - lvgl.page.show: clock_page

#################### disarming page ####################
    - id: disarming_page
      widgets:
        - obj: 
            styles: triggered_content
            border_width: 0
            text_color: white
            bg_color: red 
            scrollbar_mode: "off"
            widgets: 
              - label:
                  align: TOP_MID
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 10
                  text_font: montserrat_30
                  text: "ALARM"

              - label:
                  align: CENTER
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 50
                  text_font: montserrat_24
                  text: "Entrance Delay"

              - label:
                  id: entrance_delay_lvgl
                  align: CENTER
                  width: 100%
                  height: 100%
                  text_align: CENTER
                  translate_y: 80
                  text_font: montserrat_24
                  text: " "

              - button:
                  checkable: true
                  id: disarm_button_2
                  align: BOTTOM_MID
                  translate_y: -20
                  pressed:
                    bg_color: bg_red
                  widgets:
                    - label:
                        text_font: montserrat_18
                        text: "Disarm"
                        align: CENTER  
                  on_press:
                    - homeassistant.service:
                        service: alarm_control_panel.alarm_disarm
                        data:
                          entity_id: alarm_control_panel.alarmo
                    - lambda: |-
                        id(current_pin) = "";
                    - lvgl.page.show: disarmed_page
                    - delay: 10s
                    - lvgl.page.show: clock_page
      on_load:
        - script.stop: backlight_off
        - light.turn_on: back_light
      on_unload:
        - script.execute: backlight_off

#################### settings page ####################
    - id: settings_page
      widgets:
        - obj:
            width: 100%
            height: 100%
            bg_color: black
            widgets:
            
              - button:
                  id: btn_info
                  width: 70%
                  height: 40%
                  bg_color: dk_blue
                  radius: 12
                  align: TOP_MID
                  # translate_x: 27.5%
                  # translate_y: 10%
                  widgets:
                    - label:
                        text: "Device Info"
                        text_font: montserrat_20
                        text_color: white
                        align: CENTER
                  on_click:
                    - lvgl.page.show: info_page
              
              - button:
                  id: btn_toggles
                  width: 70%
                  height: 40%
                  bg_color: dk_blue
                  radius: 12
                  align: BOTTOM_MID
                  # translate_x: 27.5%
                  # translate_y: 50%
                  widgets:
                    - label:
                        text: "System Toggles"
                        text_font: montserrat_20
                        text_color: white
                        align: CENTER
                  on_click:
                    - lvgl.page.show: system_toggles_page
                        
        # - obj: 
        #     styles: bottom_content_bar
        #     widgets:
        #       - label:
        #           id: brightness_label
        #           align: BOTTOM_LEFT
        #           text_font: montserrat_18
        #           text_color: grey
        #           text: "0%"
                  
              # - label:
              #     align: BOTTOM_RIGHT
              #     translate_x: -50
              #     text_font: icon_font_60
              #     text_color: grey
              #     text: "\U000F02FD"
              #     on_click:
              #       - lvgl.page.show: status_page
                    
              # - label:
              #     align: BOTTOM_RIGHT
              #     text_font: icon_font_60
              #     text_color: grey
              #     text: "\U000F08D6" 
              #     on_click:
              #       - lvgl.page.show: settings_page

#################### status page ####################
    - id: status_page
      styles: main_content
      widgets:
        - obj:
            border_width: 0
            border_opa: 0
            layout: 
              type: flex
              flex_flow: column
              flex_align_main: center
              flex_align_cross: center
              flex_align_track: center
            scrollbar_mode: auto
            align: center
            width: 100%
            height: 100%
            bg_color: black
            widgets:

              - button:
                  id: steph_ceiling_led_button
                  hidden: true
                  widgets:
                    - label:
                        text: "Steph Ceiling LED: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: steph_ceiling_led_switch

              - button:
                  id: string_led_button
                  hidden: true
                  widgets:
                    - label:
                        text: "String LED: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: string_led_switch

              - button:
                  id: mini_led_button
                  hidden: true
                  widgets:
                    - label:
                        text: "Mini LED: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: mini_led_switch

              - button:
                  id: steph_floor_led_button
                  hidden: true
                  widgets:
                    - label:
                        text: "Steph Floor LED: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: steph_floor_led_switch

              - button:
                  id: keiko_led_button
                  hidden: true
                  widgets:
                    - label:
                        text: "Keiko LED: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: keiko_led_switch

              - button:
                  id: main_tv_light_button
                  hidden: true
                  widgets:
                    - label:
                        text: "Main TV Light: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: main_tv_light_switch

              - button:
                  id: fan_plug_button
                  hidden: true
                  widgets:
                    - label:
                        text: "Fan Plug: On"
                        text_font: montserrat_20
                        text_color: white
                  on_click:
                    - switch.toggle: fan_plug_switch

              - label:
                  id: status_front_door_label
                  hidden: true
                  text: "Front Door: Open"
                  text_font: montserrat_20
                  text_color: white

              - label:
                  id: status_back_door_label
                  hidden: true
                  text: "Back Door: Open"
                  text_font: montserrat_20
                  text_color: white

              - label:
                  id: status_bathroom_window_label
                  hidden: true
                  text: "Bathroom Window: Open"
                  text_font: montserrat_20
                  text_color: white

              - label:
                  id: status_charles_window_label
                  hidden: true
                  text: "Charles' Window: Open"
                  text_font: montserrat_20
                  text_color: white

              - label:
                  id: status_mediaroom_window_label
                  hidden: true
                  text: "Media Room Window: Open"
                  text_font: montserrat_20
                  text_color: white

              - label:
                  id: status_stephs_window_label
                  hidden: true
                  text: "Steph's Window: Open"
                  text_font: montserrat_20
                  text_color: white

      on_load:
        - lvgl.widget.update:
            id: steph_ceiling_led_button
            hidden: !lambda return !id(steph_ceiling_led_state).state;
        - lvgl.widget.update:
            id: string_led_button
            hidden: !lambda return !id(string_led_state).state;
        - lvgl.widget.update:
            id: mini_led_button
            hidden: !lambda return !id(mini_led_state).state;
        - lvgl.widget.update:
            id: steph_floor_led_button
            hidden: !lambda return !id(steph_floor_led_state).state;
        - lvgl.widget.update:
            id: keiko_led_button
            hidden: !lambda return !id(keiko_led_state).state;
        - lvgl.widget.update:
            id: main_tv_light_button
            hidden: !lambda return !id(main_tv_light_state).state;
        - lvgl.widget.update:
            id: fan_plug_button
            hidden: !lambda return !id(fan_plug_state).state;
        - lvgl.widget.update:
            id: status_front_door_label
            hidden: !lambda return !id(front_door_state).state;
        - lvgl.widget.update:
            id: status_back_door_label
            hidden: !lambda return !id(back_door_state).state;
        - lvgl.widget.update:
            id: status_bathroom_window_label
            hidden: !lambda return !id(bathroom_window_state).state;
        - lvgl.widget.update:
            id: status_charles_window_label
            hidden: !lambda return !id(charles_window_state).state;
        - lvgl.widget.update:
            id: status_mediaroom_window_label
            hidden: !lambda return !id(mediaroom_window_state).state;
        - lvgl.widget.update:
            id: status_stephs_window_label
            hidden: !lambda return !id(stephs_window_state).state;
        - lambda: id(current_page) = "status_page";

#################### SET ALARM CLOCK PAGE ####################
    - id: set_alarm_page
      on_load:
        - lambda: |-
            id(entered_time) = "";
            id(time_set_am_pm) = "";
        - lvgl.label.update:
            id: time_display_main
            text: "--:--"
        - lvgl.widget.update:
            id: btn_am
            bg_color: !lambda 'return id(time_set_am_pm) == "AM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'
        - lvgl.widget.update:
            id: btn_pm
            bg_color: !lambda 'return id(time_set_am_pm) == "PM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'

      widgets:
        - obj:
            styles: top_bar_sac
            layout:
              type: GRID
              grid_columns: [FR(1), FR(1), FR(1), FR(1)]
              grid_rows: [FR(1)]
              pad_column: 5
              pad_row: 0
            widgets:
              - label:
                  id: time_display_main
                  text: "--:--"
                  text_font: montserrat_30
                  text_color: white
                  text_align: CENTER
                  width: 120
                  height: 28
                  align: CENTER
                  grid_cell_column_pos: 0
                  grid_cell_column_span: 2
                  grid_cell_row_pos: 0
              - button:
                  id: btn_am
                  styles: buttons_sac
                  width: 58
                  height: 32
                  bg_color: !lambda 'return id(time_set_am_pm) == "AM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'
                  widgets:
                    - label:
                        text: "AM"
                        text_font: montserrat_14
                        text_color: white
                        text_align: CENTER
                        align: CENTER
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 0
                  on_click:
                    - lambda: |-
                        id(time_set_am_pm) = "AM";
                    - lvgl.widget.update:
                        id: btn_am
                        bg_color: !lambda 'return id(time_set_am_pm) == "AM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'
                    - lvgl.widget.update:
                        id: btn_pm
                        bg_color: !lambda 'return id(time_set_am_pm) == "PM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'
              - button:
                  id: btn_pm
                  styles: buttons_sac
                  width: 58
                  height: 32
                  bg_color: !lambda 'return id(time_set_am_pm) == "PM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'
                  widgets:
                    - label:
                        text: "PM"
                        text_font: montserrat_14
                        text_color: white
                        text_align: CENTER
                        align: CENTER
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 0
                  on_click:
                    - lambda: |-
                        id(time_set_am_pm) = "PM";
                    - lvgl.widget.update:
                        id: btn_am
                        bg_color: !lambda 'return id(time_set_am_pm) == "AM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'
                    - lvgl.widget.update:
                        id: btn_pm
                        bg_color: !lambda 'return id(time_set_am_pm) == "PM" ? lv_color_hex(0xFF0000) : lv_color_hex(0x085296);'

        - obj:
            styles: main_content_sac
            layout:
              type: GRID
              grid_columns: [FR(1), FR(1), FR(1), FR(1)]
              grid_rows: [FR(1), FR(1), FR(1)]
              pad_column: 5
              pad_row: 5
            widgets:
              - button:
                  id: btn_1
                  styles: buttons_sac
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 0
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "1"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_1), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_1), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_1), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_1), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "1";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_2
                  styles: buttons_sac
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 0
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "2"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_2), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_2), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_2), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_2), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "2";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_3
                  styles: buttons_sac
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 0
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "3"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_3), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_3), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_3), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_3), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "3";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_back
                  styles: back_button_sac
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 0
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "\U000F006E"
                        text_font: icon_font_40
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_back), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_back), lv_color_hex(0x0074D9), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_back), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_back), lv_color_hex(0xe10f00), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (!id(entered_time).empty()) id(entered_time).pop_back();
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();

              - button:
                  id: btn_4
                  styles: buttons_sac
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 1
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "4"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_4), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_4), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_4), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_4), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "4";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_5
                  styles: buttons_sac
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 1
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "5"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_5), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_5), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_5), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_5), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "5";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_6
                  styles: buttons_sac
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 1
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "6"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_6), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_6), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_6), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_6), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "6";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_0
                  styles: buttons_sac
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 1
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "0"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_0), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_0), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_0), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_0), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "0";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();

              - button:
                  id: btn_7
                  styles: buttons_sac
                  grid_cell_column_pos: 0
                  grid_cell_row_pos: 2
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "7"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_7), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_7), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_7), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_7), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "7";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_8
                  styles: buttons_sac
                  grid_cell_column_pos: 1
                  grid_cell_row_pos: 2
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "8"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_8), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_8), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_8), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_8), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "8";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_9
                  styles: buttons_sac
                  grid_cell_column_pos: 2
                  grid_cell_row_pos: 2
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "9"
                        text_font: montserrat_16
                        text_color: white
                        align: CENTER
                  on_all_events:
                    - lambda: |-
                        uint32_t code = lv_event_get_code(event);
                        if (code == LV_EVENT_PRESSED) {
                          lv_obj_set_style_bg_color(id(btn_9), lv_color_hex(0x9d0a00), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_9), lv_color_hex(0xe10f00), 0);
                        } else if (code == LV_EVENT_RELEASED) {
                          lv_obj_set_style_bg_color(id(btn_9), lv_color_hex(0x001F3F), 0);
                          lv_obj_set_style_bg_grad_color(id(btn_9), lv_color_hex(0x0074D9), 0);
                        }
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() < 4) id(entered_time) += "9";
                    - lvgl.label.update:
                        id: time_display_main
                        text: !lambda return id(entered_time).c_str();
              - button:
                  id: btn_confirm
                  styles: confirm_button_sac
                  grid_cell_column_pos: 3
                  grid_cell_row_pos: 2
                  width: 70
                  height: 45
                  widgets:
                    - label:
                        text: "\U000F012C"
                        text_font: icon_font_40
                        text_color: white
                        align: CENTER
                  on_click:
                    - lambda: |-
                        if (id(entered_time).size() >= 3 && id(entered_time).size() <= 4) {
                          int hour = 0;
                          int minute = 0;
                          if (id(entered_time).size() == 3) {
                            hour = atoi(id(entered_time).substr(0, 1).c_str());
                            minute = atoi(id(entered_time).substr(1, 2).c_str());
                          } else {
                            hour = atoi(id(entered_time).substr(0, 2).c_str());
                            minute = atoi(id(entered_time).substr(2, 2).c_str());
                          }
                          if ((hour >= 1 && hour <= 12) && (minute >= 0 && minute <= 59)) {
                            if (id(time_set_am_pm) == "PM" && hour != 12) hour += 12;
                            if (id(time_set_am_pm) == "AM" && hour == 12) hour = 0;
                            id(entered_time) = str_sprintf("%02d:%02d:00", hour, minute);
                          } else {
                            id(entered_time) = "";
                          }
                        }
                    - homeassistant.service:
                        service: input_datetime.set_datetime
                        data:
                          entity_id: input_datetime.time
                          time: !lambda return id(entered_time).c_str();
                    - lvgl.page.show: clock_page
                    - lambda: id(entered_time) = "";

#################### SYSTEM TOGGLES PAGE ####################
    - id: system_toggles_page
      widgets:
        - obj:
            width: 100%
            height: 100%
            bg_color: black
            layout:
              type: flex
              flex_flow: column
              flex_align_main: START
              flex_align_cross: CENTER
            widgets:
              - label:
                  text: "System Toggles"
                  text_font: montserrat_24
                  text_color: white
                  align: TOP_MID
                  translate_y: 20
                  
              # Antiburn Toggle
              - obj:
                  width: 80%
                  height: 50
                  align: TOP_MID
                  translate_y: 70
                  layout:
                    type: flex
                    flex_flow: row
                    flex_align_main: SPACE_BETWEEN
                    flex_align_cross: CENTER
                  widgets:
                    - label:
                        text: "Antiburn Cycle"
                        text_font: montserrat_18
                        text_color: white
                        align: CENTER
                        
                    - switch:
                        id: antiburn_switch
                        width: 60
                        height: 30
                        align: CENTER
                        on_change:
                          - switch.toggle: switch_antiburn
                          
              # Always On Toggle
              - obj:
                  width: 80%
                  height: 50
                  align: TOP_MID
                  translate_y: 130
                  layout:
                    type: flex
                    flex_flow: row
                    flex_align_main: SPACE_BETWEEN
                    flex_align_cross: CENTER
                  widgets:
                    - label:
                        text: "Display Always On"
                        text_font: montserrat_18
                        text_color: white
                        align: CENTER
                        
                    - switch:
                        id: always_on_switch
                        width: 60
                        height: 30
                        align: CENTER
                        on_change:
                          - switch.toggle: display_always_on
                          
        - obj: 
            styles: bottom_content_bar
            widgets:
              - button:
                  id: back_to_settings
                  align: BOTTOM_RIGHT
                  width: 40
                  height: 40
                  bg_color: black
                  widgets:
                    - label:
                        text: "\U000F08D6"
                        text_font: icon_font_40
                        text_color: gray
                  on_click:
                    - lvgl.page.show: settings_page
                    
#################### DEVICE INFORMATION PAGE ####################
    - id: info_page
      widgets:
        - obj:
            width: 100%
            height: 100%
            bg_color: black
            widgets:
              - label:
                  text: "Device Info"
                  text_font: montserrat_24
                  text_color: white
                  align: TOP_MID
                  translate_y: 5

              - label:
                  id: info_ip
                  text: !lambda |-
                    return "IP: " + id(ip_addr).state;
                  text_font: montserrat_18
                  text_color: white
                  align: TOP_MID
                  translate_y: 30

              - label:
                  id: info_ssid
                  text: !lambda |-
                    return "SSID: " + id(connected_ssid).state;
                  text_font: montserrat_18
                  text_color: white
                  align: TOP_MID
                  translate_y: 50

              - label:
                  id: info_wifi
                  text: !lambda |-
                    return "WiFi: " + str_sprintf("%.0f%%", id(wifi_percent).state);
                  text_font: montserrat_18
                  text_color: white
                  align: TOP_MID
                  translate_y: 70

              - label:
                  id: info_battery
                  text: !lambda |-
                    return "Battery: " + str_sprintf("%.0f%%", id(battery_percent).state);
                  text_font: montserrat_18
                  text_color: white
                  align: TOP_MID
                  translate_y: 90
              

        - obj: 
            styles: bottom_content_bar
            widgets:
              - label:
                  id: brightness_label
                  align: BOTTOM_LEFT
                  text_font: montserrat_18
                  text_color: white
                  text: "0%"
              - button:
                  id: info_back_button 
                  align: BOTTOM_RIGHT
                  width: 40
                  height: 40
                  bg_color: black
                  widgets:
                    - label:
                        text: "\U000F08D6"
                        text_font: icon_font_40
                        text_color: gray
                  on_click:
                    - lvgl.page.show: settings_page
